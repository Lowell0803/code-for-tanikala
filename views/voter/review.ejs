<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Voting System</title>

    <link rel="stylesheet" type="text/css" href="voter/css/index_voter.css" />
    <link rel="stylesheet" type="text/css" href="voter/css/review.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap" rel="stylesheet" />

    <style>
      .loading-bar-container {
        width: 100%;
        height: 5px;
        background: #ddd;
        position: relative;
        overflow: hidden;
        margin-top: 10px;
      }

      .loading-bar {
        width: 0%;
        height: 100%;
        background: #007bff;
        position: absolute;
        animation: loading-animation 2s infinite linear;
      }

      @keyframes loading-animation {
        0% {
          width: 0%;
        }
        50% {
          width: 50%;
        }
        100% {
          width: 100%;
        }
      }
    </style>
  </head>

  <body>
    <header class="header">
      <div class="header-logo">
        <img src="img/logo_tanikala.png" alt="Tanikala Voting System" />
      </div>
      <nav class="header-nav">
        <ul class="header-nav-content">
          <li><a href="/vote">Vote</a></li>
          <li><a href="/review" id="active-link">Review</a></li>
          <li><a href="verify.html">Verify</a></li>
        </ul>
      </nav>
      <div class="header-bottom-line"></div>
    </header>

    <div class="content">
      <div class="content-header">
        <div class="content-header-bulsu">
          <img src="img/logo_bulsu.png" />
        </div>
        <div class="content-header-text">
          <h1>BulSU Student Government Elections<br />S.Y. 2025 - 2026</h1>
        </div>
        <div class="content-header-ucse">
          <img src="img/logo_bulsu_ucse.png" />
        </div>
      </div>

      <div class="content-main">
        <div class="review">
          <br />
          <h3 class="blue-background">Vote Summary</h3>
          <br />
          <h3 class="red-background">BulSU Supreme Student Council S.Y. 2025-2026</h3>
          <br />
          <ul>
            <li><b>President:</b> <span><%= votes.president.name %></span></li>
            <li><b>Vice President:</b> <span><%= votes.vicePresident.name %></span></li>
            <li>
              <b>Senators:</b>
              <div>
                <% votes.senator.forEach((senator) => { %>
                <span><%= senator.name %></span><br />
                <% }); %>
              </div>
            </li>
            <li><b>Governor:</b> <span><%= votes.governor.name %></span></li>
            <li><b>Vice Governor:</b> <span><%= votes.viceGovernor.name %></span></li>
            <li><b>Board Member:</b> <span><%= votes.boardMember.name %></span></li>
          </ul>
          <form id="voteForm">
            <input type="hidden" id="voteData" value="<%= JSON.stringify(votes) %>" />
            <input type="button" id="submitBtn" value="Submit Votes to Blockchain" onclick="submitVote()" />
          </form>

          <!-- Queue Position Indicator -->
          <p id="queuePosition" style="font-weight: bold; color: #007bff; display: block">Queue Position: <span id="queueNumber"></span></p>

          <!-- Loading Bar (Initially Hidden) -->
          <div id="loading-bar" class="loading-bar-container" style="display: none">
            <div class="loading-bar"></div>
          </div>

          <!-- <script>
            async function submitVote() {
              const votes = JSON.parse(document.getElementById("voteData").value);
              console.log("Submitting votes:", votes);

              try {
                const response = await fetch("/submit-vote", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ votes }),
                });

                const data = await response.json();
                alert(data.message);
              } catch (error) {
                console.error("Error submitting vote:", error);
                alert("Failed to submit votes.");
              }
            }
          </script> -->

          <!-- <script>
            async function submitVote() {
              let votes = JSON.parse(document.getElementById("voteData").value);
              console.log("📡 Original votes:", votes);

              // ✅ Get logged-in voter's college and program
              const voterCollege = "<%= voterCollege %>";
              const voterProgram = "<%= voterProgram %>";

              // ✅ Reformat LSC votes before submission
              let formattedVotes = {
                President: votes.president,
                "Vice President": votes.vicePresident,
                Senator: votes.senator,
              };

              if (votes.governor) {
                formattedVotes[`Governor - ${voterCollege}`] = votes.governor;
              }
              if (votes.viceGovernor) {
                formattedVotes[`Vice Governor - ${voterCollege}`] = votes.viceGovernor;
              }
              if (votes.boardMember) {
                formattedVotes[`Board Member - ${voterProgram}`] = votes.boardMember;
              }

              console.log("📡 Reformatted votes:", formattedVotes);

              // ✅ Show Loading Bar & Disable Button
              let loadingBar = document.getElementById("loading-bar");
              let submitBtn = document.getElementById("submitBtn");

              loadingBar.style.display = "block"; // ✅ Ensure it's visible
              submitBtn.disabled = true;

              try {
                const response = await fetch("/submit-vote", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ votes: formattedVotes }),
                });

                const data = await response.json();
                alert(data.message);
              } catch (error) {
                console.error("❌ Error submitting vote:", error);
                alert("Failed to submit votes.");
              } finally {
                // ✅ Delay hiding the loading bar to ensure visibility
                setTimeout(() => {
                  loadingBar.style.display = "none";
                  submitBtn.disabled = false;
                }, 500); // Ensures visibility for at least 500ms
              }
            }
          </script> -->

          <script>
            async function submitVote() {
              let votes = JSON.parse(document.getElementById("voteData").value);
              console.log("📡 Original votes:", votes);

              // ✅ Get logged-in voter's college and program
              const voterCollege = "<%= voterCollege %>";
              const voterProgram = "<%= voterProgram %>";

              // ✅ Reformat LSC votes before submission
              let formattedVotes = {
                President: votes.president,
                "Vice President": votes.vicePresident,
                Senator: votes.senator,
              };

              if (votes.governor) {
                formattedVotes[`Governor - ${voterCollege}`] = votes.governor;
              }
              if (votes.viceGovernor) {
                formattedVotes[`Vice Governor - ${voterCollege}`] = votes.viceGovernor;
              }
              if (votes.boardMember) {
                formattedVotes[`Board Member - ${voterProgram}`] = votes.boardMember;
              }

              console.log("📡 Reformatted votes:", formattedVotes);

              // ✅ Show Loading Bar & Disable Button
              let loadingBar = document.getElementById("loading-bar");
              let submitBtn = document.getElementById("submitBtn");
              let queuePosition = document.getElementById("queuePosition");
              let queueNumber = document.getElementById("queueNumber");

              loadingBar.style.display = "block"; // ✅ Ensure it's visible
              submitBtn.disabled = true;
              queuePosition.style.display = "block"; // ✅ Show queue position text
              queueNumber.innerText = "🔄 Fetching queue position...";

              try {
                // ✅ Get queue position before submitting
                let queueResponse = await fetch("/get-queue-position");
                let queueData = await queueResponse.json();
                queueNumber.innerText = queueData.position; // ✅ Update queue position

                const response = await fetch("/submit-vote", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ votes: formattedVotes }),
                });

                const data = await response.json();

                if (data.transactions) {
                  alert("✅ Vote Submitted! See console for transaction hashes.");
                  console.log("📜 Transaction Hashes:", data.transactions);
                  for (let [position, hash] of Object.entries(data.transactions)) {
                    console.log(`📜 ${hash.txHash}`);
                  }
                }

                alert(data.message);
              } catch (error) {
                console.error("❌ Error submitting vote:", error);
                alert("Failed to submit votes.");
              } finally {
                // ✅ Delay hiding the loading bar to ensure visibility
                setTimeout(() => {
                  loadingBar.style.display = "none";
                  submitBtn.disabled = false;
                  queuePosition.style.display = "none"; // ✅ Hide queue position after submission
                }, 500); // Ensures visibility for at least 500ms
              }
            }
          </script>
        </div>
      </div>
    </div>

    <div class="footer">
      <div class="footer-left">
        <p>OCTOBER 23, 2024 - 04:17 AM</p>
      </div>
      <div class="footer-right">
        <p>© 2024 - Fourmula 1</p>
      </div>
    </div>

    <script></script>
  </body>
</html>
