<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Voting System</title>
    <link rel="stylesheet" type="text/css" href="css/index.css" />
    <link rel="stylesheet" type="text/css" href="voter/css/index-voter.css" />
    <link rel="stylesheet" type="text/css" href="voter/css/vote.css" />
    <link rel="stylesheet" type="text/css" href="voter/css/vote_choice.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

    <link rel="stylesheet" type="text/css" href="components/notification.css" />
  </head>

  <body>
    <header class="header">
      <div class="header-logo">
        <img src="img/logo_tanikala.png" alt="Tanikala Voting System" />
      </div>
      <nav class="header-nav">
        <ul class="header-nav-content">
          <li id="active-link">Vote</li>
          <p>|</p>
          <li>Review</li>
          <p>|</p>
          <li>Verify</li>

          <div class="settings">
            <i class="fa-solid fa-user"></i>

            <div class="dropdown" onclick="toggleDropdownVoter()"></div>
            <div class="dropdown-menu">
              <a href="/edit-account">Logged in as <span>Microsoft Email</span></a>
              <hr class="dropdown-line" />
              <a href="/voter/logout">Log Out</a>
            </div>
          </div>
        </ul>
      </nav>

      <div class="header-bottom-line"></div>
    </header>

    <div class="content">
      <div class="main-first">
        <img src="img/logo_bulsu.png" class="main-first-logo" alt="BulSU Logo" />
        <div class="first-text">
          <h2 class="title">BulSU Student Government Elections<br />2025 - 2026</h2>
        </div>
        <img src="img/logo_bulsu_ucse.png" class="main-first-logo" alt="BulSU UCSE Logo" />
      </div>
      <form action="/review" method="POST" id="voteForm">
        <div class="content-main">
          <p>
            <i>You can submit your votes by pressing the SUBMIT BALLOT button below.</i>
          </p>
          <br />

          <!-- Supreme Student Council Section -->
          <div class="ballot ballot-ssc">
            <br />
            <h3 class="ballot-header ballot-council">BulSU Supreme Student Council</h3>
            <br />

            <!-- President Candidates -->
            <h3 class="ballot-header ballot-position">President (1)</h3>
            <br />
            <div id="ballot-president" class="ballot-choices">
              <% let abstainPresident = null; %> <% const filteredPresidentCandidates = presidentCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainPresident = candidate; return false; } return true; }); %> <% filteredPresidentCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-president">
                <input class="ballot-choice candidate-radio" data-group="president" id="president-<%= index %>" type="radio" name="president" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="president-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-president" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <div class="checkbox-wrapper-10">
              <!-- Remove name attribute from the abstain checkbox -->
              <input type="checkbox" id="abstain-president" data-group="president" value="<%= JSON.stringify(abstainPresident) %>" class="tgl tgl-flip abstain-checkbox" />
              <label for="abstain-president" data-tg-on="I will vote!" data-tg-off="Abstain" class="tgl-btn"></label>
            </div>
            <br />

            <!-- Vice President Candidates -->
            <h3 class="ballot-header ballot-position">Vice President (1)</h3>
            <br />
            <div id="ballot-vice-president" class="ballot-choices">
              <% let abstainVicePresident = null; %> <% const filteredVicePresidentCandidates = vicePresidentCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainVicePresident = candidate; return false; } return true; }); %> <% filteredVicePresidentCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-vice-president">
                <input class="ballot-choice candidate-radio" data-group="vicePresident" id="vice-president-<%= index %>" type="radio" name="vicePresident" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="vice-president-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-vice-president" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <div class="checkbox-wrapper-10">
              <input type="checkbox" id="abstain-vice-president" data-group="vicePresident" value="<%= JSON.stringify(abstainVicePresident) %>" class="tgl tgl-flip abstain-checkbox" />
              <label for="abstain-vice-president" data-tg-on="I will vote!" data-tg-off="Abstain" class="tgl-btn"></label>
            </div>
            <br />

            <!-- Senator Candidates -->
            <h3 class="ballot-header ballot-position">Senators (7)</h3>
            <br />
            <div id="ballot-senator" class="ballot-choices">
              <% let abstainSenator = null; %> <% const filteredSenatorCandidates = senatorCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainSenator = candidate; return false; } return true; }); %> <% filteredSenatorCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-senator">
                <input class="ballot-choice candidate-radio" data-group="senator" id="senator-<%= index %>" type="checkbox" name="senator" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="senator-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-senator" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <br />
            <!-- Note: For senators, no separate abstain checkbox in the UI -->
          </div>
          <br />

          <!-- Local Student Council Section -->
          <div class="ballot ballot-lsc">
            <br />
            <h3 class="ballot-header ballot-lsc-council">Local Student Council - <%= college %></h3>
            <br />

            <!-- Governor Candidates -->
            <h3 class="ballot-header ballot-position">Governor (1)</h3>
            <br />
            <div id="ballot-governor" class="ballot-choices">
              <% let abstainGovernor = null; %> <% const filteredGovernorCandidates = governorCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainGovernor = candidate; return false; } return true; }); %> <% filteredGovernorCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-governor">
                <input class="ballot-choice candidate-radio" data-group="governor" id="governor-<%= index %>" type="radio" name="governor" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="governor-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-governor" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <div class="checkbox-wrapper-10">
              <input type="checkbox" id="abstain-governor" data-group="governor" value="<%= JSON.stringify(abstainGovernor) %>" class="tgl tgl-flip abstain-checkbox" />
              <label for="abstain-governor" data-tg-on="I will vote!" data-tg-off="Abstain" class="tgl-btn"></label>
            </div>
            <br />

            <!-- Vice Governor Candidates -->
            <h3 class="ballot-header ballot-position">Vice Governor (1)</h3>
            <br />
            <div id="ballot-vice-governor" class="ballot-choices">
              <% let abstainViceGovernor = null; %> <% const filteredViceGovernorCandidates = viceGovernorCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainViceGovernor = candidate; return false; } return true; }); %> <% filteredViceGovernorCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-vice-governor">
                <input class="ballot-choice candidate-radio" data-group="viceGovernor" id="vice-governor-<%= index %>" type="radio" name="viceGovernor" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="vice-governor-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-vice-governor" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <div class="checkbox-wrapper-10">
              <input type="checkbox" id="abstain-vice-governor" data-group="viceGovernor" value="<%= JSON.stringify(abstainViceGovernor) %>" class="tgl tgl-flip abstain-checkbox" />
              <label for="abstain-vice-governor" data-tg-on="I will vote!" data-tg-off="Abstain" class="tgl-btn"></label>
            </div>
            <br />

            <!-- Board Member Candidates -->
            <h3 class="ballot-header ballot-position">Board Member (1)</h3>
            <br />
            <div id="ballot-board-member" class="ballot-choices">
              <% let abstainBoardMember = null; %> <% const filteredBoardCandidates = boardCandidates.filter(function(candidate) { if(candidate.name.toLowerCase() === 'abstain'){ abstainBoardMember = candidate; return false; } return true; }); %> <% filteredBoardCandidates.forEach(function(candidate, index) { %>
              <div class="label-container label-board-member">
                <input class="ballot-choice candidate-radio" data-group="boardMember" id="board-member-<%= index %>" type="radio" name="boardMember" value="<%= JSON.stringify(candidate) %>" />
                <label class="ballot-tile" for="board-member-<%= index %>">
                  <h4 class="party"><%= candidate.party %></h4>
                  <img class="img-board-member" src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                  <h4 class="name"><%= candidate.name %></h4>
                  <hr />
                  <p class="info"><%= candidate.moreInfo %></p>
                </label>
              </div>
              <% }); %>
            </div>
            <br />
            <div class="checkbox-wrapper-10">
              <input type="checkbox" id="abstain-board-member" data-group="boardMember" value="<%= JSON.stringify(abstainBoardMember) %>" class="tgl tgl-flip abstain-checkbox" />
              <label for="abstain-board-member" data-tg-on="I will vote!" data-tg-off="Abstain" class="tgl-btn"></label>
            </div>

            <br />

            <div>
              <br />
              <hr />
              <p>
                <i>You still need to review and confirm your votes in the next page.</i>
              </p>
              <hr />
              <br />
              <button class="continue-application">
                <div>
                  <div class="pencil"></div>
                  <div class="folder">
                    <div class="top">
                      <svg viewBox="0 0 24 27">
                        <path d="M1,0 L23,0 C23.5522847,-1.01453063e-16 24,0.44771525 24,1 L24,8.17157288 C24,8.70200585 23.7892863,9.21071368 23.4142136,9.58578644 L20.5857864,12.4142136 C20.2107137,12.7892863 20,13.2979941 20,13.8284271 L20,26 C20,26.5522847 19.5522847,27 19,27 L1,27 C0.44771525,27 6.76353751e-17,26.5522847 0,26 L0,1 C-6.76353751e-17,0.44771525 0.44771525,1.01453063e-16 1,0 Z"></path>
                      </svg>
                    </div>
                    <div class="paper"></div>
                  </div>
                </div>
                Review Your Votes
              </button>
              <br />
              <br />
            </div>
            <br />
          </div>
        </div>

        <input type="hidden" name="college" value="<%= college %>" />
        <input type="hidden" name="program" value="<%= program %>" />
        <input type="hidden" name="email" value="<%= email %>" />
      </form>

      <!-- Toggle Script: Disable candidate radios when abstain checkbox is checked -->
      <script>
        document.querySelectorAll(".abstain-checkbox").forEach((checkbox) => {
          checkbox.addEventListener("change", function () {
            const group = this.getAttribute("data-group");
            const radios = document.querySelectorAll(
              'input[name="' + group + '"].candidate-radio'
            );
            if (this.checked) {
              radios.forEach((radio) => {
                radio.disabled = true;
                radio.checked = false;
              });
            } else {
              radios.forEach((radio) => {
                radio.disabled = false;
              });
            }
          });
        });

        // On form submission, for each group, if nothing is selected (and the abstain checkbox is not checked), add a hidden input with the abstain value.
        document.getElementById("voteForm").addEventListener("submit", function (e) {
          const groups = [
            "president",
            "vicePresident",
            "governor",
            "viceGovernor",
            "boardMember",
            "senator",
          ];
          groups.forEach(function (group) {
            // Remove any previously added hidden inputs for this group
            document.querySelectorAll('input.hidden-' + group).forEach((el) => el.remove());

            // Check if a candidate is already selected in this group
            const selected = document.querySelectorAll('input[name="' + group + '"]:checked');
            if (selected.length === 0) {
              let abstainValue;
              if (group === "senator") {
                // For senators, no separate abstain checkbox exists.
                // Embed the default abstain candidate from EJS and wrap it in an array.
                let senAbstainCandidate = <%- JSON.stringify(abstainSenator) %>;
                if (senAbstainCandidate) {
                  abstainValue = JSON.stringify([senAbstainCandidate]);
                }
              } else {
                // Get the abstain checkbox for this group (note: these inputs do NOT have a name)
                const abstainInput = document.querySelector(
                  'input[data-group="' + group + '"].abstain-checkbox'
                );
                if (abstainInput && abstainInput.checked) {
                  abstainValue = abstainInput.value;
                }
              }
              if (abstainValue) {
                const hidden = document.createElement("input");
                hidden.type = "hidden";
                hidden.name = group;
                hidden.value = abstainValue;
                // Tag the hidden input so we can remove it next time, if needed
                hidden.classList.add("hidden-" + group);
                this.appendChild(hidden);
              }
            }
          }, this);
        });
      </script>

      <script>
        document.getElementById("voteForm").addEventListener("submit", function (e) {
          // For President
          const presidentSelected = document.querySelector('input[name="president"]:checked');
          const abstainPresident = document.getElementById("abstain-president").checked;
          if (!presidentSelected && !abstainPresident) {
            e.preventDefault();
            notify("Please select a candidate for President or Abstain.", "error", 3000);
            return;
          }

          // For Vice President
          const vicePresidentSelected = document.querySelector('input[name="vicePresident"]:checked');
          const abstainVicePresident = document.getElementById("abstain-vice-president").checked;
          if (!vicePresidentSelected && !abstainVicePresident) {
            e.preventDefault();
            notify("Please select a candidate for Vice President or check the Abstain option.", "error", 3000);
            return;
          }

          // For Local Student Council: Governor
          const governorSelected = document.querySelector('input[name="governor"]:checked');
          const abstainGovernor = document.getElementById("abstain-governor").checked;
          if (!governorSelected && !abstainGovernor) {
            e.preventDefault();
            notify("Please select a candidate for Governor or check the Abstain option.", "error", 3000);
            return;
          }

          // For Local Student Council: Vice Governor
          const viceGovernorSelected = document.querySelector('input[name="viceGovernor"]:checked');
          const abstainViceGovernor = document.getElementById("abstain-vice-governor").checked;
          if (!viceGovernorSelected && !abstainViceGovernor) {
            e.preventDefault();
            notify("Please select a candidate for Vice Governor or check the Abstain option.", "error", 3000);
            return;
          }

          // For Local Student Council: Board Member
          const boardMemberSelected = document.querySelector('input[name="boardMember"]:checked');
          const abstainBoardMember = document.getElementById("abstain-board-member").checked;
          if (!boardMemberSelected && !abstainBoardMember) {
            e.preventDefault();
            notify("Please select a candidate for Board Member or check the Abstain option.", "error", 3000);
            return;
          }

          // Note: Senators are allowed to be unselected.
        });
      </script>

      <!-- New Script: Limit Senator Selection to 7 -->
      <script>
        document.addEventListener("DOMContentLoaded", function () {
          const senatorCheckboxes = document.querySelectorAll('input[name="senator"]');
          senatorCheckboxes.forEach((checkbox) => {
            checkbox.addEventListener("change", function () {
              const checkedCount = document.querySelectorAll('input[name="senator"]:checked').length;
              if (checkedCount > 7) {
                this.checked = false;
                notify("You can select a maximum of 7 senators.", "error", 3000);
              }
            });
          });
        });
      </script>

      <script type="module" src="components/notificationHandler.js"></script>

      <script>
        function toggleOverlay(checkboxId, targetClass) {
          document.querySelector(`#${checkboxId}`).addEventListener("change", function () {
            document.querySelectorAll(`.${targetClass}`).forEach((element) => {
              if (this.checked) {
                element.style.position = "relative";
                element.style.filter = "brightness(50%)"; // Darken the image when abstaining
              } else {
                element.style.filter = "brightness(100%)"; // Reset brightness when voting
              }
            });
          });
        }

        // Example usage:
        toggleOverlay("abstain-president", "label-president");
        toggleOverlay("abstain-vice-president", "label-vice-president");
        toggleOverlay("abstain-governor", "label-governor");
        toggleOverlay("abstain-vice-governor", "label-vice-governor");
        toggleOverlay("abstain-board-member", "label-board-member");
      </script>
      <script src="js/index.js"></script>

      <script>
        function formatDate(isoString) {
          const date = new Date(isoString);
          const options = {
            month: "long",
            day: "2-digit",
            year: "numeric",
            hour: "2-digit",
            minute: "2-digit",
            hour12: true,
          };
          return date.toLocaleString("en-US", options).toUpperCase();
        }

        function updateDateTime() {
          const datetimeElement = document.getElementById("datetime");
          if (!datetimeElement) return;

          // Get the initial time from the data attribute
          let currentTime = new Date(datetimeElement.getAttribute("data-date"));

          function update() {
            datetimeElement.textContent = formatDate(currentTime);
            currentTime.setMinutes(currentTime.getMinutes() + 1); // Increment by 1 minute
          }

          update(); // Set initial formatted date
          setInterval(update, 60000); // Update every minute (60000ms)
        }

        document.addEventListener("DOMContentLoaded", updateDateTime);
      </script>
      <script src="js/dropdown.js"></script>
    </div>

    <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime" data-date="<%= electionConfig.fakeCurrentDate %>"></p>
      </div>

      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>
      <div class="footer-right"></div>
    </footer>
  </body>
</html>
