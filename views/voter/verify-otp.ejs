<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style></style>
    <title>TANIKALA Voting System - OTP Verification</title>

    <link rel="stylesheet" type="text/css" href="css/index.css" />
    <link rel="stylesheet" type="text/css" href="css/otp-verification.css" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

    <link rel="stylesheet" href="components/notification.css" />
  </head>
  <body>
    <header class="header">
      <div class="header-logo">
        <img src="img/logo_tanikala.png" alt="Tanikala Voting System" />
      </div>
      <div class="header-bottom-line"></div>
    </header>

    <div class="content">
      <div class="content-title">
        <h3 class="h3">ONLINE VOTING SYSTEM FOR THE STUDENT GOVERNMENT ELECTIONS AT BULACAN STATE UNIVERSITY</h3>
      </div>

      <div class="content-main">
        <div class="card">
          <i class="fa-solid fa-envelope"></i>

          <h2 class="blue">User Verification</h2>
          <hr />
          <br />
          <% var message = typeof message !== 'undefined' ? message : ''; var error = typeof error !== 'undefined' ? error : ''; %> <% if (message) { %>
          <p class="success-message"><%= message %></p>
          <% } %> <% if (error) { %>
          <p class="error-message"><%= error %></p>
          <% } %>
          <br />
          <form action="/verify-otp" method="POST">
            <input type="tel" name="otp" inputmode="numeric" pattern="\d{6}" maxlength="6" placeholder="Enter OTP" class="otp-field" required />
            <br />
            <button class="otp" type="submit">Submit OTP</button>
          </form>

          <hr />
          <br />
          <p class="gray">Press the button below to request OTP to <span><%= email %></span>.</p>
          <!-- <br /><small>(For testing, you may enter <strong>999999</strong>.)</small> -->
          <!-- Form to request an OTP -->
          <!-- <form id="otpForm" action="/request-otp" method="POST" style="margin-bottom: 20px">
            <button class="request" type="button" onclick="requestOTP()">Request OTP</button>
          </form> -->
          <form id="otpForm" action="/request-otp" method="POST" style="margin-bottom: 20px">
            <button
              id="sendOtpButton"
              class="request"
              type="button"
            >
              Request OTP
            </button>
          </form>
          <input
            type="tel"
            name="otp"
            id="otpField"
            inputmode="numeric"
            pattern="\d{6}"
            maxlength="6"
            placeholder="Enter OTP"
            class="otp-field"
            disabled
            required
          />
          

          <script>
            function requestOTP() {
              let IS_DEV_MODE = false;
              if (IS_DEV_MODE) {
                const correctPassword = "5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8";
                const userInput = prompt("(For TESTING Purposes:)");

                if (userInput === correctPasswor || userInput == "lowell.03") {
                  document.getElementById("otpForm").submit();
                } else {
                  alert("Sorry! Wait for Actual Deployment to Request OTP.");
                }
              } else {
                document.getElementById("otpForm").submit();
              }
            }
          </script>

          <script>
            const sendOtpButton = document.getElementById('sendOtpButton');
            const otpField       = document.getElementById('otpField');
            let   cooldownTimer  = null;
            let   cooldownRemaining = 0;

            function startCooldown(seconds) {
              cooldownRemaining = seconds;
              sendOtpButton.disabled = true;
              updateButtonLabel();

              cooldownTimer = setInterval(() => {
                cooldownRemaining--;
                if (cooldownRemaining <= 0) {
                  clearInterval(cooldownTimer);
                  sendOtpButton.disabled = false;
                  sendOtpButton.textContent = 'Request OTP';
                } else {
                  updateButtonLabel();
                }
              }, 1000);
            }

            function updateButtonLabel() {
              const m = Math.floor(cooldownRemaining / 60);
              const s = cooldownRemaining % 60;
              sendOtpButton.textContent = 
                `Resend OTP in ${String(m).padStart(2,'0')}:${String(s).padStart(2,'0')}`;
            }

            sendOtpButton.addEventListener('click', async () => {
              // if still cooling down, do nothing
              if (cooldownRemaining > 0) return;

              sendOtpButton.disabled = true;
              try {
                const res = await fetch('/request-otp', { method: 'POST' });
                const json = await res.json();

                if (!res.ok) throw new Error(json.error || 'Unknown error');

                alert('OTP sent to your email.');
                otpField.disabled = false;
                otpField.focus();
                startCooldown(300);  // 5 minutes = 300 seconds
              } catch (err) {
                console.error(err);
                alert('Failed to send OTP: ' + err.message);
                sendOtpButton.disabled = false;
              }
            });
          </script>


          <script type="module" src="components/notificationHandler.js"></script>
        </div>
      </div>
    </div>

   <%- include('footer') %> 
    
    <script src="js/index.js"></script>

  
  </body>
</html>
