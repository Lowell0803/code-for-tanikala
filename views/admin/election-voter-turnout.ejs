<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>BulSU Voting System</title>

    <link rel="stylesheet" type="text/css" href="admin/css/index-admin.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/sidebar.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/voter-turnout.css" />

    <link rel="stylesheet" href="admin/dependencies/liner-bar.css" />

    <!-- Boxicons CDN Link -->
    <link href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=upins:wght@400;700&display=swap" rel="stylesheet" />
  </head>

  <body>
    <header class="header" id="header">
      <div class="header-logo">
        <img src="../img/logo_tanikala.png" alt="Tanikala Logo" />
      </div>
      <div class="header-content">
        <h2>
          <span><%= electionConfig.electionName || "Tanikala Voting System" %></span>
        </h2>

        <strong>
          Election Status:
          <span id="currentPeriodDisplay" class="election-status" data-status="<%= electionConfig.currentPeriod.name %>"> <%= electionConfig.currentPeriod.name %> </span>
          |
          <em id="currentPeriodName" class="right-text"> <%= electionConfig.currentPeriod.name %> </em>
        </strong>

        <script>
          document.addEventListener("DOMContentLoaded", function () {
            const periodDisplay = document.getElementById("currentPeriodDisplay");
            const periodName = document.getElementById("currentPeriodName");

            if (!periodDisplay || !periodName) return;

            // Get the election name from EJS
            let electionName = periodDisplay.getAttribute("data-status") || "";
            console.log(electionName);
            let placeholderText = "";
            let leftColor = "#f4ab2a"; // Default color for active periods

            if (electionName === "Election Not Active") {
              placeholderText = "ELECTION NOT ACTIVE | No Configuration";
              leftColor = "#004aad";
            } else if (electionName === "Results Are Out Period" || electionName === "Results Double Checking Period") {
              placeholderText = "ELECTION ENDED | " + electionName;
              leftColor = "#a60212";
            } else if (electionName === "Temporarily Closed") {
              placeholderText = "TEMPORARILY CLOSED";
              leftColor = "a60212";
            } else {
              placeholderText = "ELECTION ACTIVE | " + electionName;
              leftColor = "#5fb643  ";
            }

            if (electionName != "Temporarily Closed") {
              let parts = placeholderText.split(" | ");
              let leftText = parts[0];
              let rightText = parts.length > 1 ? parts[1] : "";

              // Update the UI
              periodDisplay.textContent = leftText;
              periodDisplay.style.color = leftColor;
              periodName.textContent = rightText;
            } else {
              preiodDisplay.style.color = leftColor;
            }
          });
        </script>

        <% let duration = electionConfig.currentPeriod.duration; let startDate = ""; let endDate = ""; if (duration.includes(" to ")) { [startDate, endDate] = duration.split(" to "); } else { startDate = duration; endDate = "(Waiting for Admin)"; } %>

        <p><strong>Start Date:</strong> <%= startDate %></p>
        <p><strong>End Date:</strong> <%= endDate %></p>
      </div>
      <div class="header-user">
        <img src="../img/placeholder_admin_profile.png" alt="Admin Profile" />
        <div class="admin-name">Admin 1</div>
        <div class="dropdown" onclick="toggleDropdown()"></div>
        <div class="dropdown-menu">
          <a href="#">View Account</a>
          <hr class="dropdown-line" />
          <a href="#">Log Out</a>
        </div>
      </div>
    </header>

    <div class="content">
      <div class="sidebar close">
        <div class="profile-details">
          <img src="img/dungo.jpeg" />
          <span class="profile-name">Zarina Dungo</span>
          <span class="job">superadmin</span>
        </div>

        <ul class="nav-links">
          <hr />
          <li>
            <a href="#">
              <i class="bx bx-menu"></i>
              <span class="link_name">Menu</span>
            </a>
          </li>
          <hr />
          <li>
            <a href="/dashboard">
              <i class="bx bxs-dashboard"></i>
              <span class="link_name">Dashboard</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/dashboard">Dashboard</a></li>
            </ul>
          </li>

          <li>
            <a href="/configuration">
              <i class="fa fa-cogs"></i>
              <span class="link_name">Configuration</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/configuration">Configuration</a></li>
            </ul>
          </li>
          <li>
            <a href="/candidates">
              <i class="fa fa-users"></i>
              <span class="link_name">Candidates</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/candidates">Candidates</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/blockchain-management">
                <i class="fa fa-link"></i>
                <span class="link_name">Blockchain</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/blockchain-management">Blockchain</a></li>
              <li><a href="/blockchain-management">Blockchain Management</a></li>
              <li><a href="/blockchain-activity-log">Activity Log</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/voter-info">
                <i class="fa fa-bar-chart"></i>
                <span class="link_name">Election</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/voter-info"><%= electionConfig.electionName || "No Election Ongoing" %></a></li>
              <li><a href="/voter-info">Voter Info</a></li>
              <li><a href="/voter-turnout">Voter Turnout</a></li>
              <li><a href="/vote-tally">Vote Tally</a></li>
              <li><a href="/results">Results</a></li>
              <li><a href="/reset">Reset Election</a></li>
            </ul>
          </li>

          <li>
            <a href="/archives">
              <i class="bx bx-archive"></i>
              <span class="link_name">Election Archives</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/archives">Election Archives</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/edit-account">
                <i class="fa fa-tasks"></i>
                <span class="link_name">System</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/edit-account">System</a></li>
              <li><a href="/edit-account">Edit Account</a></li>
              <li><a href="/manage-admins">Manage Admins</a></li>
              <li><a href="/help-page">Help Page</a></li>
              <li><a href="/system-activity-log">System Activity Log</a></li>
            </ul>
          </li>
        </ul>
      </div>
      <main class="main">
        <div class="main-header">
          <select class="select">
            <option>Main Campus</option>
          </select>
          <p id="text-blockchain-link">
            <b>Blockchain Link:</b>
            <span><a href="https://www.blockchain.com/ucsebulsu">https://www.blockchain.com/ucsebulsu</a></span>
          </p>
        </div>
        <div class="main-content">
          <div class="main-left">
            <h1>LSC Voter Turnout</h1>
            <div id="container-charts"></div>
          </div>
          <div class="main-right">
            <h1>BulSU Total Voter Turnout</h1>
            <div class="content-box-2">
              <canvas id="chart-turnout"></canvas>

              <div class="summary-text">
                <span></span>
              </div>
            </div>
            <br />
            <div class="content-colleges"></div>
          </div>
        </div>
      </main>
    </div>

    <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime" data-date="<%= electionConfig.fakeCurrentDate %>"></p>
      </div>

      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>

      <div class="footer-right">
        <img src="img/info.png" class="footer-img" id="info-img" />
        <p>Need help? Click&nbsp;</p>
        <a href="help_page">here.</a>
      </div>
    </footer>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Get the container where liner bars will be rendered
        const container = document.getElementById("container-charts");
        if (!container) return;

        // Retrieve the list of colleges from electionConfig
        const colleges = <%- JSON.stringify(electionConfig.listOfElections) %>;
        console.log("Colleges data:", colleges);

        // Loop through each college
        colleges.forEach((college) => {
          // Create a container for the liner bar and give it a unique id
          const div = document.createElement("div");
          div.id = `liner-bar-college-${college.acronym}`;
          div.classList.add("liner-bar-college"); // optional for additional styling
          container.appendChild(div);

          // Prepare the data for the liner bar:
          // "Voted" is 0 and "Not Yet Voted" is set to the total number of voters for that college.
          const data = {
            title: college.name,
            dark: false, // change to true if you want a dark theme
            items: [
              { name: "Voted", value: college.numberOfVoted, color: "#5fb643" },
              { name: "Not Yet Voted", value: college.registeredVoters - college.numberOfVoted, color: "#FC440F" }
            ]
          };

          // Instantiate the liner bar using your LinerBar class from liner-bar.js.
          // Note: liner-bar.js exposes the constructor as LinerBar.
          const bar = new LinerBar(`#${div.id}`, data);
          bar.render();

          // container.appendChild("<br>");



        });
      });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // Retrieve the list of colleges from electionConfig passed via EJS
        const colleges = <%- JSON.stringify(electionConfig.listOfElections) %>;

        // Sum up total registered voters and total voted across all colleges
        let totalRegistered = 0;
        let totalVoted = 0;
        colleges.forEach(college => {
          totalRegistered += college.registeredVoters;
          totalVoted += college.numberOfVoted;
        });
        const notVoted = totalRegistered - totalVoted;

        // Setup Chart.js chart data
        const ctx = document.getElementById('chart-turnout').getContext('2d');
        const data = {
          labels: ['Voted', 'Not Yet Voted'],
          datasets: [{
            data: [totalVoted, notVoted],
            backgroundColor: ['#5fb643', '#FC440F'],
            borderWidth: 1,
          }]
        };

        // Instantiate the pie chart using Chart.js
        new Chart(ctx, {
          type: 'pie', // Change to 'doughnut' if you prefer a donut chart
          data: data,
          options: {
            responsive: true,
            plugins: {
              legend: {
                position: 'bottom'
              },
              title: {
                display: true,
                text: 'BulSU Total Voter Turnout'
              }
            }
          }
        });
      });
    </script>

    <script>
      function formatDate(isoString) {
        const date = new Date(isoString);
        const options = {
          month: "long",
          day: "2-digit",
          year: "numeric",
          hour: "2-digit",
          minute: "2-digit",
          hour12: true,
        };
        return date.toLocaleString("en-US", options).replace(",", " -").toUpperCase();
      }

      function updateDateTime() {
        const datetimeElement = document.getElementById("datetime");
        if (!datetimeElement) return;

        // Get the initial time from the data attribute
        let currentTime = new Date(datetimeElement.getAttribute("data-date"));

        function update() {
          datetimeElement.textContent = formatDate(currentTime);
          currentTime.setMinutes(currentTime.getMinutes() + 1); // Increment by 1 minute
        }

        update(); // Set initial formatted date
        setInterval(update, 60000); // Update every minute (60000ms)
      }

      document.addEventListener("DOMContentLoaded", updateDateTime);
    </script>

    <script src="admin/js/sidebar.js"></script>
    <script src="admin/js/index-admin.js"></script>
    <script src="admin/dependencies/liner-bar.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- <script src="admin/js/turnout-liner-bar.js"></script> -->
    <!-- <script src="admin/js/turnout-pie-chart.js"></script> -->
  </body>
</html>
