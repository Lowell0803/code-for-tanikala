<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>BulSU Voting System</title>

    <link rel="stylesheet" type="text/css" href="admin/css/index_admin.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/results.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/results_scc.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/dashboard.css" />
    <link
        href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap"
        rel="stylesheet">
</head>

<body>
    <header class="header">
        <div class="header-logo">
            <img src="img/logo_tanikala.png" />
        </div>
        <div class="header-content">
            <h2>BulSU Student Government Election 2025-2026</h2>
            <p>Current Period: <span>Voting</span> | <span>ELECTION ONGOING</span></p>
            <p>Voting Period: <span>MM/DD/YYYY</span> - <span>MM/DD/YYYY</span></p>
        </div>
        <div class="header-user">
            <img src="img/placeholder_admin_profile.png" />
            <div>Admin 1</div>
        </div>
    </header>

    <div class="content">
        <aside class="aside">
            <div class="aside-admin">
                <img src="img/placeholder_admin_profile.png" />
                <h3>Admin 1</h3>
            </div>
            <nav class="aside-nav">
                <ul class="nav-main">
                    <li><a href="voter_turnout.html">Voter Turnout</a></li>
                    <li><a href="results.html">Results</a></li>
                    <li><a href="voter_information.html">Voter Information</a></li>
                    <li><a>Settings</a></li>
                </ul>
                <ul class="nav-settings">
                    <li><a href="settings_edit_account.html">Edit Account</a></li>
                    <li><a href="settings_edit_candidates.html">Edit Candidates</a></li>
                    <li><a href="settings_edit_election.html">Edit Election</a></li>
                    <li><a href="settings_delete_election.html">Delete Election</a></li>
                </ul>
            </nav>
        </aside>

        <main class="main">
            <div class="main-left">
                <h1>Supreme Student Council</h1>
                <div class="container container-ssc" id="container-president">
                    <h2>President</h2>
                    <button class="button button-add" onclick="addCandidate('President')">Add</button>
                    <div>
                        <% candidates.filter(candidate=> candidate._id.startsWith('president_'))
                            .forEach((president, index) => { %>
                            <div class="candidate">
                                <% if (president._id) { %>
                                    <h3>
                                        <%= president.name %>
                                    </h3>
                                    <p>Party: <%= president.party %>
                                    </p>
                                    <img src="<%= president.image %>" alt="<%= president.name %>">
                                    <button class="button button-edit"
                                        onclick="editCandidate('<%= president._id %>', '<%= president.position %>', '<%= president.party %>', '<%= president.name %>', '<%= president.moreInfo %>', '<%= president.image %>')">Edit</button>
                                    <% } else { %>
                                        <p>No candidates for <%= president.position %> right now.</p>
                                        <% } %>
                            </div>
                            <% }); %>
                    </div>
                </div>


                <div class="container container-ssc" id="container-vice-president">
                    <h2>Vice President</h2>
                    <button class="button button-add" onclick="addCandidate('Vice President')">Add</button>
                    <div>
                        <% candidates.filter(candidate=> candidate._id.startsWith('vice_president_'))
                            .forEach((vice_president, index) => { %>
                            <div class="candidate">
                                <% if (vice_president._id) { %>
                                    <h3>
                                        <%= vice_president.name %>
                                    </h3>
                                    <p>Party: <%= vice_president.party %>
                                    </p>
                                    <img src="<%= vice_president.image %>" alt="<%= vice_president.name %>">
                                    <button class="button button-edit"
                                        onclick="editCandidate('<%= vice_president._id %>', '<%= vice_president.position %>', '<%= vice_president.party %>', '<%= vice_president.name %>', '<%= vice_president.moreInfo %>', '<%= vice_president.image %>')">Edit</button>
                                    <% } else { %>
                                        <p>No candidates for <%= vice_president.position %> right now.</p>
                                        <% } %>
                            </div>
                            <% }); %>
                    </div>
                </div>
                <div class="container container-ssc" id="container-senators">
                    <h2>Senators</h2>
                    <button class="button button-add" onclick="addCandidate('Senator')">Add</button>
                    <div>
                        <% candidates.filter(candidate=> candidate._id.startsWith('senator_'))
                            .sort((a, b) => {
                            if (a.party < b.party) return -1; if (a.party> b.party) return 1;
                                return a.name.localeCompare(b.name);
                                })
                                .forEach((senator, index) => { %>
                                <div class="candidate">
                                    <% if (senator._id) { %>
                                        <h3>
                                            <%= senator.name %>
                                        </h3>
                                        <p>Party: <%= senator.party %>
                                        </p>
                                        <img src="<%= senator.image %>" alt="<%= senator.name %>">
                                        <button class="button button-edit"
                                            onclick="editCandidate('<%= senator._id %>', '<%= senator.position %>', '<%= senator.party %>', '<%= senator.name %>', '<%= senator.moreInfo %>', '<%= senator.image %>')">Edit</button>
                                        <% } else { %>
                                            <p>No candidates for <%= senator.position %> right now.</p>
                                            <% } %>
                                </div>
                                <% }); %>
                    </div>
                </div>

            </div>
            <div class="main-right">
                <div class="main-right-header">
                    <h1>Local Student Council</h1>
                    <select class="select" id="collegeSelect">
                        <option value="CAFA">College of Architecture and Fine Arts
                            (CAFA)</option>
                        <option value="CAL">College of Arts and Letters (CAL)</option>
                        <option value="CBEA">College of Business Education and
                            Accountancy (CBEA)</option>
                    </select>

                    <input type="text" id="collegeInput" />
                </div>
                <div>

                    <div class="container container-lsc" id="container-lsc-governor">
                        <h2>Governor</h2>
                        <button class="button button-add" onclick="addCandidateLSC('Governor')">Add</button>
                        <% candidates_lsc.forEach(college=> { %>
                            <% if (college.collegeAcronym==="CAFA" ) { %>
                                <% if (college.positions["Governor"]) { %>
                                    <% college.positions["Governor"].forEach(candidate=> { %>
                                        <div class="candidate">
                                            <img src="<%= candidate.image %>" alt="<%= candidate.name %>">
                                            <h3>
                                                <%= candidate.name %>
                                            </h3>
                                            <p>Party: <%= candidate.party %>
                                            </p>
                                            <p>
                                                <%= candidate.moreInfo %>
                                            </p>
                                            <button class="button button-edit"
                                                onclick="editCandidateLSC('<%= candidate._id %>', '<%= candidate.position %>', '<%= candidate.party %>', '<%= candidate.name %>', '<%= candidate.moreInfo %>', '<%= candidate.image %>', '<%= college.collegeAcronym %>')">
                                                Edit
                                            </button>

                                        </div>
                                        <% }); %>
                                            <% } %>
                                                <% } %>
                                                    <% }); %>

                    </div>

                    <div class="container container-lsc" id="container-lsc-vice-governor">
                        <h2>Vice Governor</h2>
                        <button class="button button-add" onclick="addCandidateLSC('Vice Governor')">Add</button>
                        <% candidates_lsc.forEach(college=> { %>
                            <% if (college.collegeAcronym==="CAFA" ) { %>
                                <% if (college.positions["Vice Governor"]) { %>
                                    <% college.positions["Vice Governor"].forEach(candidate=> { %>
                                        <div class="candidate">
                                            <img src="<%= candidate.image %>" alt="<%= candidate.name %>">
                                            <h3>
                                                <%= candidate.name %>
                                            </h3>
                                            <p>Party: <%= candidate.party %>
                                            </p>
                                            <p>
                                                <%= candidate.moreInfo %>
                                            </p>
                                            <button class="button button-edit"
                                                onclick="editCandidateLSC('<%= candidate._id %>', '<%= candidate.position %>', '<%= candidate.party %>', '<%= candidate.name %>', '<%= candidate.moreInfo %>', '<%= candidate.image %>', '<%= college.collegeAcronym %>')">
                                                Edit
                                            </button>

                                        </div>
                                        <% }); %>
                                            <% } %>
                                                <% } %>
                                                    <% }); %>

                    </div>

                    <div class="container container-lsc" id="container-lsc-board-member">
                        <h2>Board Member</h2>
                        <% let cafa=candidates_lsc.find(college=> college.collegeAcronym === "CAFA");
                            if (cafa && cafa.positions["Board Member"]) {
                            let boardMembers = cafa.positions["Board Member"];
                            %>
                            <% Object.keys(boardMembers).forEach(program=> { %>
                                <h3>
                                    <%= program %>
                                </h3>
                                <button class="button button-add"
                                    onclick="addCandidateLSC('Board Member', '<%= program %>')">Add</button>

                                <ul>
                                    <% boardMembers[program].forEach(candidate=> { %>
                                        <li>

                                            <img src="<%= candidate.image %>" alt="<%= candidate.name %>">
                                            <strong>
                                                <%= candidate.name %>
                                            </strong> - <%= candidate.party %>
                                                <p>
                                                    <%= candidate.moreInfo %>
                                                </p>
                                                <button class="button button-edit"
                                                    onclick="editCandidateLSC('<%= candidate._id %>', '<%= candidate.position %>', '<%= candidate.party %>', '<%= candidate.name %>', '<%= candidate.moreInfo %>', '<%= candidate.image %>', '<%= cafa.collegeAcronym %>', '<%= program %>')">
                                                    Edit
                                                </button>
                                        </li>
                                        <% }) %>
                                </ul>
                                <% }) %>
                                    <% } else { %>
                                        <p>No board members found for CAFA.</p>
                                        <% } %>
                    </div>


                </div>
            </div>
        </main>
    </div>

    <footer class="footer">
        <div class="footer-side"></div>
        <div class="footer-center">© 2024 - Fourmula 1</div>
        <div class="footer-side">OCTOBER 23, 2024 - 04:17 AM</div>
    </footer>

    <!-- LSC -->

    <div id="form-add-lsc" class="form-container">
        <div id="form-buttons">
            <button class="button" id="button-close-add-lsc" onclick="toggleForm('form-add-lsc')">Close</button>

            <h2 id="heading-position-add-lsc">Position</h2>

            <form method="POST" action="/add-candidate-lsc">
                <input type="hidden" id="college-acronym-add-lsc" name="collegeAcronym">
                <input type="hidden" id="program-add-lsc" name="program">

                <label>(for backend):</label>
                <input type="text" id="candidate-id-add-lsc" name="_id" readonly>
                <input type="text" id="position-add-lsc" name="candidatePosition" readonly><br><br>
                <img id="image-add" src="img/placeholder_admin_profile.png"
                    style="max-width: 200px; max-height: 200px;"><br><br>

                <!-- Image Upload Input -->
                <input type="file" id="image-upload-add-lsc" accept="image/*">
                <input type="hidden" id="image-base64-add-lsc" name="image">

                <label for="name">Name:</label>
                <input type="text" id="name-add-lsc" name="name" required><br><br>

                <label for="party">Party:</label>
                <select id="party-add-lsc" name="party">
                    <option value="KASAMA - BulSU">KASAMA - BulSU</option>
                    <option value="BulSUONE">BulSUONE</option>
                </select><br><br>

                <label for="more-info">Info:</label><br>
                <textarea id="more-info-add-lsc" name="moreInfo"></textarea>
                <br>
                <input type="submit" class="button button-add" value="Add">
            </form>
        </div>
    </div>


    <div id="form-edit-lsc" class="form-container">
        <div id="form-buttons">
            <button class="button" id="button-close-edit-lsc" onclick="toggleForm('form-edit-lsc')">Close</button>
            <button class="button" id="button-delete-edit-lsc" onclick="deleteCandidateLSC()">Delete</button>

            <br><br>
            test
            <h2 id="heading-position-edit-lsc">Position</h2>
            <form method="POST" action="/update-candidate-lsc">
                <input type="hidden" id="college-acronym-edit-lsc" name="collegeAcronym">
                <input type="hidden" id="program-edit-lsc" name="program"> <!-- Only for Board Members -->

                <label>(for backend):</label>
                <input type="text" id="candidate-id-edit-lsc" name="_id" readonly>
                <input type="text" id="position-edit-lsc" name="candidatePosition" readonly><br><br>
                <img id="image-edit-lsc" src="img/placeholder_admin_profile.png"
                    style="max-width: 200px; max-height: 200px;"><br><br>

                <!-- Image Upload Input -->
                <input type="file" id="image-upload-edit-lsc" accept="image/*">
                <input type="hidden" id="image-base64-edit-lsc" name="image">
                <input type="hidden" id="original-image-edit-lsc" name="originalImage">

                <label for="name">Name:</label>
                <input type="text" id="name-edit-lsc" name="name"><br><br>
                <label for="party">Party:</label>
                <select id="party-edit-lsc" name="party">
                    <option value="KASAMA - BulSU">KASAMA</option>
                    <option value="BulSUONE">BulSU ONE</option>
                </select><br><br>
                <label for="more-info">Info:</label><br>
                <textarea id="more-info-edit-lsc" name="moreInfo"></textarea>
                <br>
                <input type="submit" class="button button-save" value="Save">
            </form>
        </div>
    </div>

    <!-- SSC -->

    <div id="form-add" class="form-container">
        <div id="form-buttons">
            <button class="button" id="button-close" onclick="toggleForm('form-add')">Close</button>

            <br><br>
            <h2 id="heading-position-add">Position</h2>
            <form method="POST" action="/add-candidate">
                <label>(for backend):</label>
                <input type="text" id="candidate-id-add" name="_id" readonly>
                <input type="text" id="position-add" name="candidatePosition" readonly><br><br>
                <img id="image-add" src="img/placeholder_admin_profile.png"
                    style="max-width: 200px; max-height: 200px;"><br><br>

                <!-- Image Upload Input -->
                <input type="file" id="image-upload-add" accept="image/*">
                <input type="hidden" id="image-base64-add" name="image">

                <label for="name">Name:</label>
                <input type="text" id="name-add" name="name" required><br><br>
                <label for="party">Party:</label>
                <select id="party-add" name="party">
                    <option value="KASAMA - BulSU">KASAMA - BulSU</option>
                    <option value="BulSUONE">BulSUONE</option>
                </select><br><br>
                <label for="more-info">Info:</label><br>
                <textarea id="more-info-add" name="moreInfo"></textarea>
                <br>
                <input type="submit" class="button button-add" value="Add">
            </form>
        </div>
    </div>



    <div id="form-edit" class="form-container">
        <div id="form-buttons">
            <button class="button" id="button-close" onclick="toggleForm('form-edit')">Close</button>
            <button class="button" id="button-delete" onclick="deleteCandidate()">Delete</button>

            <br><br>
            <h2 id="heading-position-edit">Position</h2>
            <form method="POST" action="/update-candidate">
                <label>(for backend):</label>
                <input type="text" id="candidate-id-edit" name="_id" readonly>
                <input type="text" id="position-edit" name="candidatePosition" readonly><br><br>
                <img id="image-edit" src="img/placeholder_admin_profile.png"
                    style="max-width: 200px; max-height: 200px;"><br><br>

                <!-- Image Upload Input -->
                <input type="file" id="image-upload-edit" accept="image/*">
                <input type="hidden" id="image-base64-edit" name="image">
                <input type="hidden" id="original-image-edit" name="originalImage">

                <label for="name">Name:</label>
                <input type="text" id="name-edit" name="name"><br><br>
                <label for="party">Party:</label>
                <select id="party-edit" name="party">
                    <option value="KASAMA - BulSU">KASAMA</option>
                    <option value="BulSUONE">BulSU ONE</option>
                </select><br><br>
                <label for="more-info">Info:</label><br>
                <textarea id="more-info-edit" name="moreInfo"></textarea>
                <br>
                <input type="submit" class="button button-save" value="Save">
            </form>
        </div>
    </div>

    <script>
        // Set the default selection to CAFA on page load
        window.onload = function () {
            const select = document.getElementById('collegeSelect');
            const input = document.getElementById('collegeInput');

            // Set the default value of the input to the selected option (CAFA)
            input.value = select.options[select.selectedIndex].text;

            // Listen for any changes in the select element and update the input
            select.addEventListener('change', function () {
                input.value = select.options[select.selectedIndex].text;
            });
        };

        function editCandidateLSC(id, position, party, name, moreInfo, image, collegeAcronym, program = "") {
            let form_id = "form-edit-lsc";
            toggleForm(form_id);

            let headingPosition = document.getElementById("heading-position-edit-lsc");
            let profileImage = document.getElementById("image-edit-lsc");
            let inputId = document.getElementById("candidate-id-edit-lsc");
            let inputPosition = document.getElementById("position-edit-lsc");
            let inputName = document.getElementById("name-edit-lsc");
            let inputParty = document.getElementById("party-edit-lsc");
            let inputMoreInfo = document.getElementById("more-info-edit-lsc");
            let inputCollegeAcronym = document.getElementById("college-acronym-edit-lsc");
            let inputProgram = document.getElementById("program-edit-lsc");
            let hiddenOriginalImage = document.getElementById("original-image-edit-lsc");

            console.log("Editing candidate:", { id, position, party, name, moreInfo, collegeAcronym, program });

            headingPosition.innerHTML = position + (program ? ` - ${program}` : ""); // Show program for Board Members
            inputName.value = name;

            // Capitalize first letter of each word
            function capitalize(str) {
                return str
                    .split(' ') // Split into words
                    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()) // Capitalize first letter of each word
                    .join(' '); // Join the words back into a string
            }

            inputPosition.value = capitalize(position);
            inputParty.value = party;
            inputId.value = id;
            inputMoreInfo.value = moreInfo;
            inputCollegeAcronym.value = collegeAcronym; // Fix: Assign correct value
            inputProgram.value = program; // Fix: Assign correct program if Board Member

            if (image && image !== "image") {
                profileImage.src = image;
                hiddenOriginalImage.value = image;
            } else if (hiddenOriginalImage.value) {
                profileImage.src = hiddenOriginalImage.value;
            } else {
                profileImage.src = "img/placeholder_admin_profile.png";
            }
        }

        function addCandidateLSC(position, program = "") {
            let formId = "form-add-lsc";
            toggleForm(formId); // Show form before setting values

            let selectedCollege = document.getElementById("collegeSelect");
            let inputCollege = document.getElementById("college-acronym-add-lsc");
            let inputPosition = document.getElementById("position-add-lsc");
            let inputProgram = document.getElementById("program-add-lsc");
            let inputCandidateId = document.getElementById("candidate-id-add-lsc");

            // Ensure all elements exist before using them
            if (!selectedCollege || !inputCollege || !inputPosition || !inputCandidateId) {
                console.error("⚠️ Missing form elements! Check IDs in the HTML.");
                return;
            }

            // Set values dynamically
            inputCollege.value = selectedCollege.value;
            inputPosition.value = position;
            inputProgram.value = program || "";

            // Fetch candidates to determine next ID
            fetch(`/api/candidates-lsc?position=${encodeURIComponent(position)}&college=${selectedCollege.value}${program ? `&program=${encodeURIComponent(program)}` : ""}`)
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        console.warn("API Error:", data.error);
                        return;
                    }

                    let maxId = 0;
                    data.candidates.forEach(candidate => {
                        const match = candidate._id.match(/_(\d+)$/);
                        if (match) {
                            const num = parseInt(match[1], 10);
                            if (num > maxId) {
                                maxId = num;
                            }
                        }
                    });

                    // Generate new ID dynamically
                    inputCandidateId.value = `${position.toLowerCase().replace(" ", "_")}_${maxId + 1}`;
                })
                .catch(error => console.error("Error fetching candidates:", error));
        }

        async function deleteCandidateLSC() {
            let candidateId = document.getElementById("candidate-id-edit-lsc").value;
            let candidatePosition = document.getElementById("position-edit-lsc").value;
            let candidateCollege = document.getElementById("college-acronym-edit-lsc").value;
            let candidateProgram = document.getElementById("program-edit-lsc").value; // Only relevant for Board Members

            if (!candidateId) {
                alert("No candidate selected for deletion.");
                return;
            }

            if (!confirm("Are you sure you want to delete this candidate?")) {
                return;
            }

            try {
                const response = await fetch("/delete-candidate-lsc", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        _id: candidateId,
                        candidatePosition: candidatePosition,
                        collegeAcronym: candidateCollege,
                        program: candidateProgram,
                    }),
                });

                if (response.ok) {
                    alert("Candidate deleted successfully.");
                    window.location.reload(); // Refresh the page to update the UI
                } else {
                    const errorMessage = await response.text();
                    alert("Failed to delete candidate: " + errorMessage);
                }
            } catch (error) {
                console.error("Error deleting candidate:", error);
                alert("An error occurred while deleting the candidate.");
            }
        }


    </script>


    <script>
        async function addCandidate(position) {
            let form_id = "form-add";
            toggleForm(form_id); // Show form before setting values

            let headingPosition = document.getElementById("heading-position-add");
            headingPosition.innerHTML =
                position.charAt(0).toUpperCase() + position.slice(1);

            try {
                // Include the position query parameter in the request
                const response = await fetch(`/api/candidates?position=${encodeURIComponent(position)}`);
                const data = await response.json();
                console.log(data);

                // Check if the response contains an error
                if (data.error) {
                    console.warn("API Error:", data.error);
                    return;
                }

                if (!data || !data.candidates) {
                    console.warn("No candidates found for position:", position);
                    return;
                }

                // Extract the highest candidate ID
                let maxId = 0;
                data.candidates.forEach(candidate => {
                    const match = candidate._id.match(/_(\d+)$/);
                    if (match) {
                        const num = parseInt(match[1], 10);
                        if (num > maxId) {
                            maxId = num;
                        }
                    }
                });

                // Generate the new candidate ID
                const newCandidateId = `${position.toLowerCase().replace(" ", "_")}_${maxId + 1}`;

                // Populate the form fields
                document.getElementById("candidate-id-add").value = newCandidateId;
                document.getElementById("position-add").value = position;

            } catch (error) {
                console.error("Error fetching candidates:", error);
            }
        }

        async function deleteCandidate() {
            let candidateId = document.getElementById("candidate-id-edit").value;

            if (!candidateId) {
                alert("No candidate selected for deletion.");
                return;
            }

            if (!confirm("Are you sure you want to delete this candidate?")) {
                return;
            }

            try {
                const response = await fetch("/delete-candidate", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ _id: candidateId }),
                });

                if (response.ok) {
                    alert("Candidate deleted successfully.");
                    window.location.reload(); // Refresh the page to update the UI
                } else {
                    const errorMessage = await response.text();
                    alert("Failed to delete candidate: " + errorMessage);
                }
            } catch (error) {
                console.error("Error deleting candidate:", error);
                alert("An error occurred while deleting the candidate.");
            }
        }


        function editCandidate(id, position = "position", party = "party", name = "name", moreInfo = "info", image = "image") {
            let form_id = "form-edit";
            toggleForm(form_id);

            let headingPosition = document.getElementById("heading-position-edit");
            let profileImage = document.getElementById("image-edit");
            let inputId = document.getElementById("candidate-id-edit");
            let inputPosition = document.getElementById("position-edit");
            let inputName = document.getElementById("name-edit");
            let inputParty = document.getElementById("party-edit");
            let inputMoreInfo = document.getElementById("more-info-edit");
            let hiddenOriginalImage = document.getElementById("original-image-edit");

            console.log("form is being opened");
            console.log(position, party, name);

            headingPosition.innerHTML = position;
            inputName.value = name;
            inputPosition.value = position;
            inputParty.value = party;
            inputId.value = id;
            inputMoreInfo.value = moreInfo;
            console.log(position, id, name, party, moreInfo);

            if (image && image !== "image") {
                profileImage.src = image;
                hiddenOriginalImage.value = image; // Store original image in hidden input
            } else if (hiddenOriginalImage.value) {
                profileImage.src = hiddenOriginalImage.value; // Keep existing image
            } else {
                profileImage.src = "img/placeholder_admin_profile.png"; // Fallback only if there's no original image
            }
        }

        function toggleForm(form_id) {
            let form = document.getElementById(form_id);
            if (form) {
                if (form.style.display === "none" || form.style.display === "") {
                    form.style.display = "block";
                } else {
                    form.style.display = "none";
                }
            }
        }

        function handleImageUpload(imageUploadId, imagePreviewId, imageBase64InputId, hiddenOriginalImageId = "") {
            document.getElementById(imageUploadId).addEventListener("change", function (event) {
                let file = event.target.files[0];
                if (file) {
                    let reader = new FileReader();
                    reader.readAsDataURL(file);

                    reader.onload = function (e) {
                        let img = new Image();
                        img.src = e.target.result;

                        img.onload = function () {
                            let canvas = document.createElement("canvas");
                            let ctx = canvas.getContext("2d");

                            // Set max dimensions
                            let maxWidth = 500;
                            let maxHeight = 500;
                            let width = img.width;
                            let height = img.height;

                            // Resize while maintaining aspect ratio
                            if (width > maxWidth || height > maxHeight) {
                                let aspectRatio = width / height;
                                if (width > height) {
                                    width = maxWidth;
                                    height = width / aspectRatio;
                                } else {
                                    height = maxHeight;
                                    width = height * aspectRatio;
                                }
                            }

                            // Draw resized image on canvas
                            canvas.width = width;
                            canvas.height = height;
                            ctx.drawImage(img, 0, 0, width, height);

                            // Convert to Base64
                            let base64String = canvas.toDataURL("image/png"); // Convert to PNG Base64
                            document.getElementById(imagePreviewId).src = base64String; // Preview
                            document.getElementById(imageBase64InputId).value = base64String; // Store in hidden input
                        };
                    };
                } else {
                    if (hiddenOriginalImageId != "") {
                        document.getElementById(imageBase64InputId).value = document.getElementById(hiddenOriginalImageId).value;
                    }
                }
            });
        }

        // Usage:
        handleImageUpload("image-upload-add", "image-add", "image-base64-add");
        handleImageUpload("image-upload-edit", "image-edit", "image-base64-edit", "original-image-edit");
        handleImageUpload("image-upload-add-lsc", "image-add-lsc", "image-base64-add-lsc");
        handleImageUpload("image-upload-edit-lsc", "image-edit-lsc", "image-base64-edit-lsc", "original-image-edit-lsc");

    </script>


</body>

</html>