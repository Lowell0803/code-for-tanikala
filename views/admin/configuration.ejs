<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>TANIKALA | Configuration</title>
    <link rel="stylesheet" href="admin/css/index-admin.css" />
    <link rel="stylesheet" href="admin/css/configuration.css" />
    <link rel="stylesheet" href="admin/css/sidebar.css" />
    <link href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=upins:wght@400;700&display=swap" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/boxicons/css/boxicons.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="components/notification.css" />
    <script type="module" src="components/notification.js"></script>

    <style>
      .period-info {
        margin: 10px 0;
        padding: 10px;
        border: 1px solid #ccc;
        background: #f9f9f9;
      }
      .period-info h3 {
        margin: 0 0 5px;
      }
    </style>
  </head>
  <body>
    <header class="header" id="header">
      <div class="header-logo">
        <img src="../img/logo_tanikala.png" alt="Tanikala Logo" />
      </div>
      <div class="header-content">
        <h2>
          <span><%= electionConfig.electionName || "Tanikala Voting System" %></span>
        </h2>

        <strong>
          Election Status:
          <span id="currentPeriodDisplay" class="election-status" data-status="<%= electionConfig.currentPeriod.name %>"> <%= electionConfig.currentPeriod.name %> </span>
          |
          <em id="currentPeriodName" class="right-text"> <%= electionConfig.currentPeriod.name %> </em>
        </strong>

        <script>
          document.addEventListener("DOMContentLoaded", function () {
            const periodDisplay = document.getElementById("currentPeriodDisplay");
            const periodName = document.getElementById("currentPeriodName");

            if (!periodDisplay || !periodName) return;

            // Get the election name from EJS
            let electionName = periodDisplay.getAttribute("data-status") || "";
            console.log(electionName);
            let placeholderText = "";
            let leftColor = "#f4ab2a"; // Default color for active periods

            if (electionName === "Election Not Active") {
              placeholderText = "ELECTION NOT ACTIVE | No Configuration";
              leftColor = "#004aad";
            } else if (electionName === "Results Are Out Period" || electionName === "Results Double Checking Period") {
              placeholderText = "ELECTION ENDED | " + electionName;
              leftColor = "#a60212";
            } else if (electionName === "Temporarily Closed") {
              placeholderText = "TEMPORARILY CLOSED";
              leftColor = "a60212";
            } else {
              placeholderText = "ELECTION ACTIVE | " + electionName;
              leftColor = "#5fb643";
            }

            if (electionName != "Temporarily Closed") {
              let parts = placeholderText.split(" | ");
              let leftText = parts[0];
              let rightText = parts.length > 1 ? parts[1] : "";

              // Update the UI
              periodDisplay.textContent = leftText;
              periodDisplay.style.color = leftColor;
              periodName.textContent = rightText;
            } else {
              preiodDisplay.style.color = leftColor;
            }
          });
        </script>

        <% let duration = electionConfig.currentPeriod.duration; let startDate = ""; let endDate = ""; if (duration.includes(" to ")) { [startDate, endDate] = duration.split(" to "); } else { startDate = duration; endDate = "(Waiting for Admin)"; } %>

        <p><strong>Start Date:</strong> <%= startDate %></p>
        <p><strong>End Date:</strong> <%= endDate %></p>
      </div>
      <div class="header-user">
        <img src="<%= loggedInAdmin.img %>" alt="Admin Profile" />
        <div class="profile">
          <div class="admin-name"><%= loggedInAdmin.name %></div>
          <i> <span class="job"><%= loggedInAdmin.role %></span></i>
        </div>
        <div class="dropdown" onclick="toggleDropdown()"></div>
        <div class="dropdown-menu">
          <a href="/edit-account">View Account</a>
          <hr class="dropdown-line" />
          <a href="/logout">Log Out</a>
        </div>
      </div>
    </header>

    <div class="content">
      <div class="sidebar close">
        <div class="profile-details">
          <img src="<%= loggedInAdmin.img %>" />
          <span class="profile-name"><%= loggedInAdmin.name %></span>
          <span class="job"><%= loggedInAdmin.role %></span>
        </div>

        <ul class="nav-links">
          <hr />
          <li>
            <a href="#">
              <i class="bx bx-menu"></i>
              <span class="link_name">Menu</span>
            </a>
          </li>
          <hr />
          <li>
            <a href="/dashboard">
              <i class="bx bxs-dashboard"></i>
              <span class="link_name">Dashboard</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/dashboard">Dashboard</a></li>
            </ul>
          </li>

          <li id="active-tab">
            <a href="/configuration">
              <i class="fa fa-cogs"></i>
              <span class="link_name">Configuration</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/configuration">Configuration</a></li>
            </ul>
          </li>
          <li>
            <a href="/candidates">
              <i class="fa fa-users"></i>
              <span class="link_name">Candidates</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/candidates">Candidates</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/blockchain-management">
                <i class="fa fa-link"></i>
                <span class="link_name">Blockchain</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/blockchain-management">Blockchain</a></li>
              <li><a href="/blockchain-management">Blockchain Management</a></li>
              <li><a href="/blockchain-activity-log">Activity Log</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/voter-info">
                <i class="fa fa-bar-chart"></i>
                <span class="link_name">Election</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/voter-info"><%= electionConfig.electionName || "No Election Ongoing" %></a></li>
              <li><a href="/voter-info">Voter Info</a></li>
              <li><a href="/voter-turnout">Voter Turnout</a></li>
              <li><a href="/vote-tally">Vote Tally</a></li>
              <li><a href="/results">Results</a></li>
              <li><a href="/reset">Reset Election</a></li>
            </ul>
          </li>

          <li>
            <a href="/archives">
              <i class="bx bx-archive"></i>
              <span class="link_name">Election Archives</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="/archives">Election Archives</a></li>
            </ul>
          </li>

          <li>
            <div class="icon-link">
              <a href="/edit-account">
                <i class="fa fa-tasks"></i>
                <span class="link_name">System</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="/edit-account">System</a></li>
              <li><a href="/edit-account">Edit Account</a></li>
              <li><a href="/manage-admins">Manage Admins</a></li>
              <li><a href="/help-page">Help Page</a></li>
              <li><a href="/system-activity-log">System Activity Log</a></li>
            </ul>
          </li>
        </ul>
      </div>
      <main class="main">
        <div class="title-container">
          <div class="r">
            <i class="fa fa-cogs"></i>
            <h1 class="title">Configuration</h1>
          </div>
        </div>
        <hr class="title-line" />
        <div class="first-main">
          <!-- Display Current Election Configuration -->

          <section class="election-info">
            <% if (electionConfig.electionName) { %>
            <p class="election-name">&nbsp;<strong>Election Name:</strong> <%= electionConfig.electionName %></p>
            <hr />
            <% } %> <% if (electionConfig.currentPeriod.name) { %>
            <p><i class="bx bx-calendar-check"></i>&nbsp;<strong>Status:</strong> <%= electionConfig.currentPeriod.name %></p>
            <% } %> <% if (electionConfig.registrationStart && electionConfig.registrationEnd) { %>
            <p>
              <i class="bx bx-edit-alt"></i>
              <strong>Registration Period:</strong>
              <%= new Date(electionConfig.registrationStart).toLocaleString() %> - <%= new Date(electionConfig.registrationEnd).toLocaleString() %>
            </p>
            <% } %> <% if (electionConfig.votingStart && electionConfig.votingEnd) { %>
            <p>
              <i class="bx bx-list-ul"></i>
              <strong>Voting Period:</strong>
              <%= new Date(electionConfig.votingStart).toLocaleString() %> - <%= new Date(electionConfig.votingEnd).toLocaleString() %>
            </p>
            <% } %>
          </section>
          <br />
          <!-- Election Creation / Update Form -->
          <section class="create-election">
            <h2>Create / Update Election</h2>
            <hr />
            <form action="/configuration" method="POST">
              <div>
                <label for="electionName">Election Name:</label>
                <input class="input" type="text" id="electionName" name="electionName" value="<%= electionConfig.electionName %>" required />
              </div>
              <div>
                <label for="registrationStart">Registration Start Date:</label>
                <input class="input" type="datetime-local" id="registrationStart" name="registrationStart" value="<%= electionConfig.registrationStart ? new Date(electionConfig.registrationStart).toISOString().slice(0,16) : '' %>" required />
              </div>
              <div>
                <label for="registrationEnd">Registration End Date:</label>
                <input class="input" type="datetime-local" id="registrationEnd" name="registrationEnd" value="<%= electionConfig.registrationEnd ? new Date(electionConfig.registrationEnd).toISOString().slice(0,16) : '' %>" required />
              </div>
              <div>
                <label for="votingStart">Voting Start Date:</label>
                <input class="input" type="datetime-local" id="votingStart" name="votingStart" value="<%= electionConfig.votingStart ? new Date(electionConfig.votingStart).toISOString().slice(0,16) : '' %>" required />
              </div>
              <div>
                <label for="votingEnd">Voting End Date:</label>
                <input class="input" type="datetime-local" id="votingEnd" name="votingEnd" value="<%= electionConfig.votingEnd ? new Date(electionConfig.votingEnd).toISOString().slice(0,16) : '' %>" required />
              </div>
              <div>
                <label for="partylists">Partylists (comma separated):</label>
                <input class="input" type="text" id="partylists" name="partylists" value="<%= electionConfig.partylists ? electionConfig.partylists.join(', ') : '' %>" required />
              </div>
              <fieldset>
                <legend><strong>Number of Students Per College</strong></legend>
                <% if (electionConfig.listOfElections && electionConfig.listOfElections.length > 0) { %> <% electionConfig.listOfElections.forEach(function(college) { %>
                <div class="num-of-students">
                  <div>
                    <img height="50" src="img/colleges/<%= college.acronym %>.png" />
                    <label for="<%= college.acronym %>"> <%= college.name %> (<%= college.acronym %>): </label>
                  </div>
                  <input class="input" type="number" id="<%= college.acronym %>" name="colleges[<%= college.acronym %>]" value="<%= college.voters %>" min="0" required />
                </div>
                <% }); %> <% } else { %>
                <p>No college data available.</p>
                <% } %>
              </fieldset>

              <button class="button button-save" type="submit">Save Election Configuration</button>
            </form>

            <!-- Action Buttons -->
            <% const effectiveDate = electionConfig.fakeCurrentDate ? new Date(electionConfig.fakeCurrentDate) : new Date(); %>
            <div style="margin-top: 20px">
              <% if (electionConfig.electionStatus === "Temporarily Closed") { %>
              <form action="/resume-election" method="POST">
                <button type="submit" style="background-color: #4caf50; color: #fff">Resume Election</button>
              </form>
              <% } else { %>
              <form action="/temporarily-closed" method="POST">
                <button type="submit" style="background-color: #f44336; color: #fff">Temporarily Close Election</button>
              </form>
              <% } %> <% if (electionConfig.votingEnd && effectiveDate > new Date(electionConfig.votingEnd) && electionConfig.electionStatus !== "Results Are Out") { %>
              <form action="/set-results-out" method="POST">
                <button type="submit" style="background-color: #4caf50; color: #fff">Set Results Are Out</button>
              </form>
              <% } %>
              <form action="/reset-election" method="POST">
                <button type="submit" style="background-color: #000; color: #fff">Reset Election</button>
              </form>
            </div>
          </section>

          <!-- Test Date Picker for simulating the current date -->
          <div class="test-date">
            <label for="testDatePicker">Test Current Date:</label>
            <input type="datetime-local" id="testDatePicker" onchange="updateCurrentPeriod()" />
            <small>(Select a datetime to simulate the current date and update the phase)</small>
          </div>
        </div>
      </main>
    </div>

    <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime" data-date="<%= electionConfig.fakeCurrentDate %>"></p>
      </div>

      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>

      <div class="footer-right">
        <img src="img/info.png" class="footer-img" id="info-img" />
        <p>Need help? Click&nbsp;</p>
        <a href="help_page">here.</a>
      </div>
    </footer>

    <script>
      function formatDate(isoString) {
        const date = new Date(isoString);
        const options = {
          month: "long",
          day: "2-digit",
          year: "numeric",
          hour: "2-digit",
          minute: "2-digit",
          hour12: true,
        };
        return date.toLocaleString("en-US", options).replace(",", " -").toUpperCase();
      }

      function updateDateTime() {
        const datetimeElement = document.getElementById("datetime");
        if (!datetimeElement) return;

        // Get the initial time from the data attribute
        let currentTime = new Date(datetimeElement.getAttribute("data-date"));

        function update() {
          datetimeElement.textContent = formatDate(currentTime);
          currentTime.setMinutes(currentTime.getMinutes() + 1); // Increment by 1 minute
        }

        update(); // Set initial formatted date
        setInterval(update, 60000); // Update every minute (60000ms)
      }

      document.addEventListener("DOMContentLoaded", updateDateTime);
    </script>

    <script src="admin/js/sidebar.js"></script>
    <script src="admin/js/index_admin.js"></script>
    <script>
      // Embed the electionConfig object from the server
      let electionConfig = <%- JSON.stringify(electionConfig) %>;

      function getEffectiveCurrentDate() {
        return electionConfig.fakeCurrentDate ? new Date(electionConfig.fakeCurrentDate) : new Date();
      }

      function calculateCurrentPeriod() {
        const now = getEffectiveCurrentDate();
        if (!electionConfig.registrationStart || !electionConfig.registrationEnd || !electionConfig.votingStart || !electionConfig.votingEnd) {
          return { name: "Election Not Active", duration: "Configuration Incomplete", waitingFor: null };
        }
        const regStart = new Date(electionConfig.registrationStart);
        const regEnd = new Date(electionConfig.registrationEnd);
        const voteStart = new Date(electionConfig.votingStart);
        const voteEnd = new Date(electionConfig.votingEnd);
        if (now < regStart) {
          return { name: "Waiting for Registration Period", duration: `${now.toLocaleString()} to ${regStart.toLocaleString()}`, waitingFor: "Registration" };
        } else if (now >= regStart && now <= regEnd) {
          return { name: "Registration Period", duration: `${regStart.toLocaleString()} to ${regEnd.toLocaleString()}` };
        } else if (now > regEnd && now < voteStart) {
          return { name: "Waiting for Voting Period", duration: `${regEnd.toLocaleString()} to ${voteStart.toLocaleString()}`, waitingFor: "Voting" };
        } else if (now >= voteStart && now <= voteEnd) {
          return { name: "Voting Period", duration: `${voteStart.toLocaleString()} to ${voteEnd.toLocaleString()}` };
        } else if (now > voteEnd) {
          if (electionConfig.electionStatus === "Results Are Out") {
            return { name: "Results Are Out Period", duration: `${voteEnd.toLocaleString()} to (manual)` };
          } else {
            return { name: "Results Double Checking Period", duration: `${voteEnd.toLocaleString()} to (manual trigger)` };
          }
        }
        return { name: "Election Not Active", duration: "N/A" };
      }

      function updateCurrentPeriod() {
        const testDateInput = document.getElementById("testDatePicker").value;
        const testDate = testDateInput ? new Date(testDateInput) : new Date();
        const period = calculateCurrentPeriod();
        fetch("/set-test-date", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ fakeCurrentDate: testDate.toISOString(), period }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              // electionConfig.fakeCurrentDate = data.fakeCurrentDate;
              // electionConfig.currentPeriod = data.period;
              // document.getElementById("currentPeriodDisplay").innerText = data.period.name;
              // document.getElementById("currentPeriodDuration").innerText = data.period.duration;
              window.location.reload();
            }
          })
          .catch((err) => console.error("Error updating test date:", err));
      }

      window.addEventListener("load", () => {
        const effectiveDate = getEffectiveCurrentDate();
        const period = calculateCurrentPeriod();
        document.getElementById("currentPeriodDisplay").innerText = period.name;
        document.getElementById("currentPeriodDuration").innerText = period.duration;
      });
    </script>

    <script type="module">
      import { createNotification } from "/components/notification.js";

      // Check if the URL contains ?saved in the query string
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has("saved")) {
        createNotification("Election configuration saved successfully!", "success", 2000);
        // Remove the query parameter so the notification doesn't appear again on refresh
        history.replaceState({}, document.title, window.location.pathname);
      }
    </script>
    <script src="admin/js/index-admin.js"></script>
    <script src="js/dropdown.js"></script>
  </body>
</html>
