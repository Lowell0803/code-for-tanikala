<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>BulSU Voting System</title>
    <link rel="stylesheet" href="admin/css/index-admin.css" />
    <link rel="stylesheet" href="admin/css/election-management.css" />
    <link rel="stylesheet" href="admin/css/sidebar.css" />
    <link href="https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=upins:wght@400;700&display=swap" rel="stylesheet" />
    <style>
      .test-date {
        background: #f5f5f5;
        padding: 10px;
        margin: 10px 0;
        border: 1px dashed #ccc;
      }
      .test-date label {
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <header class="header" id="header">
      <div class="header-logo">
        <img src="../img/logo_tanikala.png" alt="Tanikala Logo" />
      </div>
      <div class="header-content">
        <h2>
          <span><%= electionConfig.electionName || "Tanikala Voting System" %></span>
        </h2>
        <p>
          Current Election Status:&nbsp;
          <span class="election-status"><%= electionConfig.electionStatus %></span>
          |
          <span class="election-status2" id="currentPeriodDisplay"> <%= electionConfig.currentPeriod.name %> <% if (electionConfig.currentPeriod.timeUntil) { %> (<%= electionConfig.currentPeriod.timeUntil %>) <% } %> </span>
        </p>
        <p><strong>Current Phase:</strong> <%= electionConfig.currentPeriod.name %></p>
        <p>
          <strong>Duration:</strong>
          <span id="currentPeriodDuration"><%= electionConfig.currentPeriod.duration %></span>
        </p>
        <% if (electionConfig.currentPeriod.nextPeriod && electionConfig.currentPeriod.nextPeriod.name) { %>
        <p>
          <strong>Time until <%= electionConfig.currentPeriod.nextPeriod.name %>:</strong>
          <%= electionConfig.currentPeriod.nextPeriod.remainingDays %> days
        </p>
        <% } %>
      </div>
      <div class="header-user">
        <img src="../img/placeholder_admin_profile.png" alt="Admin Profile" />
        <div class="admin-name">Admin 1</div>
        <div class="dropdown" onclick="toggleDropdown()"></div>
        <div class="dropdown-menu">
          <a href="#">View Account</a>
          <hr class="dropdown-line" />
          <a href="#">Log Out</a>
        </div>
      </div>
    </header>

    <div class="content">
      <div class="sidebar close">
        <div class="user-details">
          <img src="img/dungo.jpeg" />
          <span class="user-name">Zarina Dungo</span>
        </div>
        <ul class="nav-links">
          <hr />
          <li>
            <a href="#">
              <i class="bx bx-menu"></i>
              <span class="link_name">Menu</span>
            </a>
          </li>
          <hr />
          <li>
            <a href="dashboard">
              <i class="bx bxs-dashboard"></i>
              <span class="link_name">Dashboard</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="dashboard">Dashboard</a></li>
            </ul>
          </li>
          <li>
            <a href="configuration">
              <i class="fa fa-cogs"></i>
              <span class="link_name">Configuration</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="configuration">Configuration</a></li>
            </ul>
          </li>
          <li>
            <a href="candidates">
              <i class="fa fa-users"></i>
              <span class="link_name">Candidates</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="candidates">Candidates</a></li>
            </ul>
          </li>
          <li>
            <div class="icon-link">
              <a href="blockchain-management">
                <i class="fa fa-link"></i>
                <span class="link_name">Blockchain</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="blockchain-management">Blockchain</a></li>
              <li><a href="blockchain-management">Blockchain Management</a></li>
              <li><a href="blockchain-activity-log">Activity Log</a></li>
            </ul>
          </li>
          <li>
            <div class="icon-link">
              <a href="voter-info">
                <i class="fa fa-bar-chart"></i>
                <span class="link_name">Election</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="voter-info">(Election Name)</a></li>
              <li><a href="voter-info">Voter Info</a></li>
              <li><a href="voter-turnout">Voter Turnout</a></li>
              <li><a href="results">Results</a></li>
              <li><a href="reset">Reset Election</a></li>
            </ul>
          </li>
          <li>
            <a href="archives">
              <i class="bx bx-archive"></i>
              <span class="link_name">Election Archives</span>
            </a>
            <ul class="sub-menu blank">
              <li><a class="link_name" href="archives">Election Archives</a></li>
            </ul>
          </li>
          <li>
            <div class="icon-link">
              <a href="edit-account">
                <i class="fa fa-tasks"></i>
                <span class="link_name">System</span>
              </a>
              <i class="bx bxs-chevron-down arrow"></i>
            </div>
            <ul class="sub-menu">
              <li><a class="link_name" href="edit-account">System</a></li>
              <li><a href="edit-account">Edit Account</a></li>
              <li><a href="manage-account">Manage Accounts</a></li>
              <li><a href="help-page">Help Page</a></li>
              <li><a href="history">System Activity Log</a></li>
            </ul>
          </li>
        </ul>
      </div>
      <main class="main">
        <!-- Display Current Election Configuration -->
        <section class="election-info">
          <h1>Current Election Configuration</h1>
          <p><strong>Election Name:</strong> <%= electionConfig.electionName %></p>
          <p><strong>Status:</strong> <%= electionConfig.electionStatus %></p>
          <% if (electionConfig.registrationStart && electionConfig.registrationEnd) { %>
          <p>
            <strong>Registration Period:</strong>
            <%= new Date(electionConfig.registrationStart).toLocaleString() %> - <%= new Date(electionConfig.registrationEnd).toLocaleString() %>
          </p>
          <% } %> <% if (electionConfig.votingStart && electionConfig.votingEnd) { %>
          <p>
            <strong>Voting Period:</strong>
            <%= new Date(electionConfig.votingStart).toLocaleString() %> - <%= new Date(electionConfig.votingEnd).toLocaleString() %>
          </p>
          <% } %>
          <p><strong>Current Phase:</strong> <%= electionConfig.currentPeriod.name %></p>
          <p>
            <strong>Duration:</strong>
            <span id="currentPeriodDuration"><%= electionConfig.currentPeriod.duration %></span>
          </p>
          <% if (electionConfig.currentPeriod.nextPeriod && electionConfig.currentPeriod.nextPeriod.name) { %>
          <p>
            <strong>Time until <%= electionConfig.currentPeriod.nextPeriod.name %>:</strong>
            <%= electionConfig.currentPeriod.nextPeriod.remainingDays %> days
          </p>
          <% } %>
        </section>

        <!-- Election Creation / Update Form -->
        <section class="create-election">
          <h2>Create / Update Election</h2>
          <form action="/configuration" method="POST">
            <div>
              <label for="electionName">Election Name:</label>
              <input type="text" id="electionName" name="electionName" value="<%= electionConfig.electionName %>" required />
            </div>
            <div>
              <label for="registrationStart">Registration Start Date:</label>
              <input type="datetime-local" id="registrationStart" name="registrationStart" value="<%= electionConfig.registrationStart ? new Date(electionConfig.registrationStart).toISOString().slice(0,16) : '' %>" required />
            </div>
            <div>
              <label for="registrationEnd">Registration End Date:</label>
              <input type="datetime-local" id="registrationEnd" name="registrationEnd" value="<%= electionConfig.registrationEnd ? new Date(electionConfig.registrationEnd).toISOString().slice(0,16) : '' %>" required />
            </div>
            <div>
              <label for="votingStart">Voting Start Date:</label>
              <input type="datetime-local" id="votingStart" name="votingStart" value="<%= electionConfig.votingStart ? new Date(electionConfig.votingStart).toISOString().slice(0,16) : '' %>" required />
            </div>
            <div>
              <label for="votingEnd">Voting End Date:</label>
              <input type="datetime-local" id="votingEnd" name="votingEnd" value="<%= electionConfig.votingEnd ? new Date(electionConfig.votingEnd).toISOString().slice(0,16) : '' %>" required />
            </div>
            <div>
              <label for="partylists">Partylists (comma separated):</label>
              <input type="text" id="partylists" name="partylists" value="<%= electionConfig.partylists.join(', ') %>" required />
            </div>
            <fieldset>
              <legend>Number of Students Per College</legend>
              <% const collegesList = ['CAFA', 'CAL', 'CBEA', 'CCJE', 'COE', 'COED', 'CHTM', 'CIT', 'CICT', 'CON', 'CS', 'CSSP', 'CSER']; %> <% collegesList.forEach(function(college) { %>
              <div>
                <label for="<%= college %>"><%= college %>:</label>
                <input type="number" id="<%= college %>" name="colleges[<%= college %>]" value="<%= electionConfig.colleges && electionConfig.colleges[college] ? electionConfig.colleges[college] : 0 %>" min="0" required />
              </div>
              <% }); %>
            </fieldset>
            <button type="submit">Save Election</button>
          </form>

          <!-- Button to Temporarily Close or Resume Election -->
          <% if (electionConfig.electionStatus === "Temporarily Closed") { %>
          <form action="/resumeElection" method="POST" style="margin-top: 10px">
            <button type="submit" style="background-color: #4caf50; color: #fff">Resume Election</button>
          </form>
          <% } else { %>
          <form action="/temporarilyClosed" method="POST" style="margin-top: 10px">
            <button type="submit" style="background-color: #f44336; color: #fff">Temporarily Close Election</button>
          </form>
          <% } %>

          <!-- Button to Set Results Are Out (only shown if voting is over and not already set) -->
          <% var effectiveDate = electionConfig.fakeCurrentDate ? new Date(electionConfig.fakeCurrentDate) : new Date(); var voteEnd = electionConfig.votingEnd ? new Date(electionConfig.votingEnd) : null; if (voteEnd && effectiveDate > voteEnd && electionConfig.electionStatus !== "Results Are Out" && electionConfig.electionStatus !== "Temporarily Closed") { %>
          <form action="/setResultsOut" method="POST" style="margin-top: 10px">
            <button type="submit" style="background-color: #4caf50; color: #fff">Set Results Are Out</button>
          </form>
          <% } %>

          <!-- Button to Reset Election (archives current config and empties values) -->
          <form action="/resetElection" method="POST" style="margin-top: 10px">
            <button type="submit" style="background-color: #000; color: #fff">Reset Election</button>
          </form>
        </section>

        <!-- Test Date Picker for simulating the current date -->
        <div class="test-date">
          <label for="testDatePicker">Test Current Date:</label>
          <input type="datetime-local" id="testDatePicker" onchange="updateCurrentPeriod()" />
          <small>(Select a datetime to simulate the current date and update the phase)</small>
        </div>
      </main>
    </div>

    <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime">OCTOBER 23, 2024 - 04:17 AM</p>
      </div>
      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>
      <div class="footer-right">
        <img src="img/info.png" class="footer-img" id="info-img" />
        <p>Need help? Click&nbsp;</p>
        <a href="help_page">here.</a>
      </div>
    </footer>

    <script src="admin/js/sidebar.js"></script>
    <script src="admin/js/index-admin.js"></script>
    <script>
      // Embed the electionConfig object from the server
      let electionConfig = <%- JSON.stringify(electionConfig) %>;

      // Return the effective current date (fake if set, otherwise real)
      function getEffectiveCurrentDate() {
        return electionConfig.fakeCurrentDate ? new Date(electionConfig.fakeCurrentDate) : new Date();
      }

      // Compute the current phase based on the dates and current status
      function getCurrentPeriod(now) {
        // If the election is temporarily closed, return that state immediately.
        if (electionConfig.electionStatus === "Temporarily Closed") {
          return { name: "Temporarily Closed", duration: "", timeUntil: null };
        }
        if (!electionConfig.registrationStart ||
            !electionConfig.registrationEnd ||
            !electionConfig.votingStart ||
            !electionConfig.votingEnd) {
          return { name: "Election Not Active", duration: "Not set", timeUntil: null };
        }
        const regStart = new Date(electionConfig.registrationStart);
        const regEnd = new Date(electionConfig.registrationEnd);
        const voteStart = new Date(electionConfig.votingStart);
        const voteEnd = new Date(electionConfig.votingEnd);
        const daysUntil = (future) => Math.ceil((future - now) / (1000 * 60 * 60 * 24));

        if (now < regStart) {
          return {
            name: "Waiting for Registration",
            duration: regStart.toLocaleString() + " - " + regEnd.toLocaleString(),
            timeUntil: daysUntil(regStart) + " days until registration",
          };
        } else if (now >= regStart && now <= regEnd) {
          return {
            name: "Registration Open",
            duration: regStart.toLocaleString() + " - " + regEnd.toLocaleString(),
            timeUntil: null,
          };
        } else if (now > regEnd && now < voteStart) {
          return {
            name: "Waiting for Election",
            duration: voteStart.toLocaleString() + " - " + voteEnd.toLocaleString(),
            timeUntil: daysUntil(voteStart) + " days until election",
          };
        } else if (now >= voteStart && now <= voteEnd) {
          return {
            name: "Election Open",
            duration: voteStart.toLocaleString() + " - " + voteEnd.toLocaleString(),
            timeUntil: null,
          };
        } else if (now > voteEnd) {
          if (electionConfig.electionStatus === "Results Are Out") {
            return { name: "Results Are Out", duration: "", timeUntil: null };
          } else {
            return { name: "Results Double Checking", duration: "", timeUntil: "Awaiting manual trigger" };
          }
        }
        return { name: "Unknown Phase", duration: "N/A", timeUntil: null };
      }

      // Called when the test date changes; updates the fake date and phase on the server
      function updateCurrentPeriod() {
        const testDateInput = document.getElementById("testDatePicker").value;
        const testDate = testDateInput ? new Date(testDateInput) : new Date();
        const period = getCurrentPeriod(testDate);
        fetch("/setTestDate", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ fakeCurrentDate: testDate.toISOString(), period }),
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.success) {
              electionConfig.fakeCurrentDate = data.fakeCurrentDate;
              electionConfig.currentPeriod = data.period;
              document.getElementById("currentPeriodDisplay").innerText = data.period.name;
              document.getElementById("currentPeriodDuration").innerText =
                data.period.duration || data.period.timeUntil;
            }
          })
          .catch((err) => console.error("Error updating test date:", err));
      }

      window.addEventListener("load", () => {
        const effectiveDate = getEffectiveCurrentDate();
        const period = getCurrentPeriod(effectiveDate);
        document.getElementById("currentPeriodDisplay").innerText = period.name;
        document.getElementById("currentPeriodDuration").innerText =
          period.duration || period.timeUntil;
      });
    </script>
  </body>
</html>
