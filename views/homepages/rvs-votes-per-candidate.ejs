<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>TANIKALA Voting System</title>

    <link rel="stylesheet" type="text/css" href="css/index.css" />
    <link rel="stylesheet" type="text/css" href="css/home.css" />
    <!-- <link rel="stylesheet" type="text/css" href="css/index_election.css" /> -->
    <link rel="stylesheet" type="text/css" href="css/rvs.css" />
    <link rel="stylesheet" type="text/css" href="admin/css/vote-tally.css" />

    <link rel="stylesheet" type="text/css" href="admin/dependencies/progress-bar.css" />

    <style>
      .progress-bar {
        background-color: #e0e0e0;
        border-radius: 10px;
        width: 100%;
        height: 20px;
        overflow: hidden;
        margin: 5px 0;
      }

      .progress {
        background-color: #4caf50;
        height: 100%;
        width: 0; /* this value is set inline from the EJS variable */
        transition: width 0.5s ease-in-out;
      }

      .main h3 {
        color: black;
      }

      .modal {
        color: black;
        position: fixed;
        z-index: 10000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
      }

      .modal h3 {
        color: black;
      }

      .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 700px;
        border-radius: 5px;
      }

      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }

      .voteHashList {
        font-size: 10 px;
      }
    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;700&display=swap" rel="stylesheet" />
  </head>
  <body>
    <header class="header">
      <div class="header-logo">
        <img src="img/logo_tanikala.png" alt="Tanikala Voting System" />
      </div>
      <nav class="header-nav">
        <h2 id="active-link">Results Verification Portal</h2>
      </nav>
      <div class="header-bottom-line"></div>
    </header>

    <div class="content">
      <div class="content-title">
        <h3 class="h3" style="text-transform: uppercase">Welcome to the Bulacan State University Student Government Elections - Results Verification Portal!</h3>
      </div>

      <div class="content-main">
        <div class="main-first">
          <ul class="header-nav-content">
            <li><a href="/rvs-about">About</a></li>
            <li><a href="/rvs-voter-turnout">Voter Turnout</a></li>
            <li><a href="/rvs-votes-per-candidate" id="active-link2">Votes per Candidate</a></li>
            <li><a href="/rvs-election-results">Election Results</a></li>
          </ul>
          <div class="election-title">
            <p class="title">
              <span>BulSU Student Government Elections S.Y. 2025 - 2026</span>
            </p>
          </div>
        </div>

        <div class="beside">
          <i class="fa-solid fa-house"></i>
          <a href="/index-results-are-out-period">Go Back to Homepage.</a>
        </div>

        <div class="main-container">
          <p>This page shows the official winners of the election for each position in the Supreme Student Council (SSC) and Local Student Councils (LSCs). Final vote counts per candidate are available on the "Votes per Candidate" page, ensuring transparency and accuracy in the results.</p>

          <main class="main">
            <div class="title-container">
              <div class="r">
                <h1><i class="fas fa-list-ol"></i> Vote Tally</h1>
              </div>
            </div>
            <hr class="title-line" />

            <div class="first-main">
              <!-- Supreme Student Council Section -->
              <div class="main-left" style="color: black">
                <h2 style="text-align: center; color: white">Supreme Student Council</h2>
                <% const presidentCandidates = candidates.filter(candidate => candidate.position === 'president'); const totalVotes = presidentCandidates.reduce((acc, candidate) => acc + Number(candidate.voteCount), 0); %>

                <div class="container-ssc" id="container-president">
                  <h1>President</h1>
                  <% presidentCandidates.forEach(candidate => { const percentage = totalVotes > 0 ? ((candidate.voteCount / totalVotes) * 100).toFixed(2) : 0; %>
                  <div class="candidate">
                    <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                    <h3><%= candidate.name %></h3>
                    <p>Party: <%= candidate.party %></p>
                    <p>Votes: <%= candidate.voteCount %></p>
                    <div class="progress-bar">
                      <div class="progress" data-target="<%= percentage %>%" style="width: 0"></div>
                    </div>
                    <p><%= percentage %>%</p>
                    <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                    <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                  </div>
                  <% }); %>
                </div>

                <script>
                  window.addEventListener("load", function () {
                    const progressElements = document.querySelectorAll(".progress");
                    progressElements.forEach((el) => {
                      const targetWidth = el.getAttribute("data-target");
                      el.style.width = targetWidth;
                    });
                  });
                </script>

                <% const viceCandidates = candidates.filter(candidate => candidate.position === 'vice president'); const totalVotesVice = viceCandidates.reduce((acc, candidate) => acc + Number(candidate.voteCount), 0); %>
                <div class="container-ssc" id="container-vice-president">
                  <h1>Vice President</h1>
                  <% viceCandidates.forEach(candidate => { const percentage = totalVotesVice > 0 ? ((candidate.voteCount / totalVotesVice) * 100).toFixed(2) : 0; %>
                  <div class="candidate">
                    <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                    <h3><%= candidate.name %></h3>
                    <p>Party: <%= candidate.party %></p>
                    <p>Votes: <%= candidate.voteCount %></p>
                    <div class="progress-bar">
                      <div class="progress" data-target="<%= percentage %>%" style="width: 0"></div>
                    </div>
                    <p><%= percentage %>%</p>
                    <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                    <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                  </div>
                  <% }); %>
                </div>
                <script>
                  window.addEventListener("load", function () {
                    const progressElements = document.querySelectorAll(".progress");
                    progressElements.forEach((el) => {
                      const targetWidth = el.getAttribute("data-target");
                      el.style.width = targetWidth;
                    });
                  });
                </script>

                <% const senatorCandidates = candidates.filter(candidate => candidate.position === 'senator'); const maxVote = senatorCandidates.reduce((max, candidate) => Math.max(max, Number(candidate.voteCount)), 0); %>
                <div class="container-ssc" id="container-senator">
                  <h1>Senators</h1>
                  <% senatorCandidates.forEach(candidate => { const percentage = maxVote > 0 ? ((candidate.voteCount / maxVote) * 100).toFixed(2) : 0; %>
                  <div class="candidate">
                    <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                    <h3><%= candidate.name %></h3>
                    <p>Party: <%= candidate.party %></p>
                    <p>Votes: <%= candidate.voteCount %></p>
                    <div class="progress-bar">
                      <div class="progress" data-target="<%= percentage %>%" style="width: 0"></div>
                    </div>
                    <p><%= percentage %>%</p>
                    <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                    <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                  </div>
                  <% }); %>
                </div>

                <script>
                  window.addEventListener("load", function () {
                    const progressElements = document.querySelectorAll(".progress");
                    progressElements.forEach((el) => {
                      const targetWidth = el.getAttribute("data-target");
                      el.style.width = targetWidth;
                    });
                  });
                </script>
              </div>

              <!-- Local Student Council Section -->
              <div class="main-right" style="color: black">
                <div class="main-right-header">
                  <h2 class="lsc" style="color: white">Local Student Council</h2>
                  <br />
                  <select name="college" id="college-selector">
                    <option value="">-- Select a College --</option>
                    <option value="CAFA">College of Architecture and Fine Arts (CAFA)</option>
                    <option value="CAL">College of Arts and Letters (CAL)</option>
                    <option value="CBEA">College of Business Education and Accountancy (CBEA)</option>
                    <option value="CCJE">College of Criminal Justice Education (CCJE)</option>
                    <option value="CHTM">College of Hospitality and Tourism Management (CHTM)</option>
                    <option value="CICT">College of Information and Communications Technology (CICT)</option>
                    <option value="CIT">College of Industrial Technology (CIT)</option>
                    <option value="CN">College of Nursing (CN)</option>
                    <option value="COE">College of Engineering (COE)</option>
                    <option value="COED">College of Education (COED)</option>
                    <option value="CS">College of Science (CS)</option>
                    <option value="CSER">College of Sports, Exercise, and Recreation (CSER)</option>
                    <option value="CSSP">College of Social Sciences and Philosophy (CSSP)</option>
                  </select>
                </div>
                <br />
                <div id="lsc-container">
                  <!-- Governor Container -->
                  <div class="container-lsc" id="container-lsc-governor">
                    <h1>Governor</h1>
                    <% candidates.filter(candidate => candidate.position === 'governor' && candidate.college).forEach(candidate => { %>
                    <div class="candidate lsc-candidate" data-college="<%= candidate.college %>">
                      <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                      <h3><%= candidate.name %></h3>
                      <p>Party: <%= candidate.party %></p>
                      <p>Votes: <%= candidate.voteCount %></p>
                      <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                      <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                    </div>
                    <% }); %>
                  </div>
                  <!-- Vice Governor Container -->
                  <div class="container-lsc" id="container-lsc-vice-governor">
                    <h1>Vice Governor</h1>
                    <% candidates.filter(candidate => candidate.position === 'vice governor' && candidate.college).forEach(candidate => { %>
                    <div class="candidate lsc-candidate" data-college="<%= candidate.college %>">
                      <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                      <h3><%= candidate.name %></h3>
                      <p>Party: <%= candidate.party %></p>
                      <p>Votes: <%= candidate.voteCount %></p>
                      <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                      <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                    </div>
                    <% }); %>
                  </div>
                  <!-- Board Member Container -->
                  <div class="container-lsc" id="container-lsc-board-member">
                    <h1>Board Member</h1>
                    <% let boardMembersByProgram = {}; candidates .filter(candidate => candidate.position === 'board member' && candidate.college && candidate.program) .forEach(candidate => { if (!boardMembersByProgram[candidate.program]) { boardMembersByProgram[candidate.program] = []; } boardMembersByProgram[candidate.program].push(candidate); }); %> <% Object.keys(boardMembersByProgram).forEach(program => { %>
                    <h3 class="program-header"><%= program %></h3>
                    <% boardMembersByProgram[program].forEach(candidate => { %>
                    <div class="candidate lsc-candidate" data-college="<%= candidate.college %>" data-program="<%= candidate.program %>">
                      <img src="<%= candidate.image %>" alt="<%= candidate.name %>" />
                      <h4><%= candidate.name %></h4>
                      <p>Party: <%= candidate.party %></p>
                      <p>Votes: <%= candidate.voteCount %></p>
                      <!-- Clickable text with candidate.uniqueId stored in a data attribute -->
                      <a href="#" class="show-vote-hashes" data-candidate-id="<%= candidate.candidateId %>">Show Vote Hashes</a>
                    </div>
                    <% }); %> <% }); %>
                  </div>

                  <script>
                    document.addEventListener("DOMContentLoaded", function () {
                      const selector = document.getElementById("college-selector");

                      function filterBoardMembers() {
                        const selectedCollege = selector.value;
                        const container = document.getElementById("container-lsc-board-member");
                        const candidateCards = container.querySelectorAll(".lsc-candidate");
                        candidateCards.forEach((card) => {
                          const candidateCollege = card.getAttribute("data-college");
                          card.style.display = !selectedCollege || candidateCollege === selectedCollege ? "block" : "none";
                        });
                        const headers = container.querySelectorAll(".program-header");
                        headers.forEach((header) => {
                          let next = header.nextElementSibling;
                          let visibleCount = 0;
                          while (next && !next.classList.contains("program-header")) {
                            if (next.classList.contains("lsc-candidate") && next.style.display !== "none") visibleCount++;
                            next = next.nextElementSibling;
                          }
                          header.style.display = visibleCount === 0 ? "none" : "block";
                        });
                      }

                      selector.addEventListener("change", filterBoardMembers);
                      filterBoardMembers();
                    });
                  </script>
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
    </div>

    <!-- Modal for showing vote hashes -->
    <!-- Modal for showing vote hashes -->
    <div id="voteHashModal" class="modal" style="display: none">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h3>Vote Hashes</h3>
        <!-- Search bar -->
        <input type="text" id="voteHashSearch" placeholder="Search hashes..." style="width: 100%; margin-bottom: 10px; padding: 5px" />
        <div id="voteHashList" style="max-height: 300px; overflow-y: auto"></div>
      </div>
    </div>

    <script>
      var candidateHashes = <%- JSON.stringify(candidateHashes || []) %>;
      console.log("CandidateHashes loaded:", candidateHashes);

      function showVoteHashes(candidateId) {
        console.log("showVoteHashes called for candidateId:", candidateId);
        var candidateHash = candidateHashes.find(item => item.candidateId.toLowerCase() === candidateId.toLowerCase());
        var voteHashListDiv = document.getElementById("voteHashList");
        voteHashListDiv.innerHTML = ""; // Clear existing content
        if (candidateHash && candidateHash.emails && candidateHash.emails.length > 0) {
          candidateHash.emails.forEach(function(hash) {
            var p = document.createElement("p");
            p.textContent = hash;
            voteHashListDiv.appendChild(p);
          });
        } else {
          voteHashListDiv.textContent = "No votes found for this candidate.";
        }
        document.getElementById("voteHashModal").style.display = "block";
      }

      document.addEventListener("DOMContentLoaded", function() {
        // Add click event listener to all "Show Vote Hashes" links.
        var showLinks = document.querySelectorAll(".show-vote-hashes");
        showLinks.forEach(function(link) {
          link.addEventListener("click", function(event) {
            event.preventDefault();
            var candidateId = this.getAttribute("data-candidate-id");
            console.log("Clicked candidateId:", candidateId);
            if (!candidateId) {
              console.error("Error: Candidate ID is missing!");
              return;
            }
            showVoteHashes(candidateId);
          });
        });

        // Close modal when clicking on the close button.
        var closeBtn = document.querySelector("#voteHashModal .close");
        closeBtn.addEventListener("click", function() {
          document.getElementById("voteHashModal").style.display = "none";
        });

        // Optionally, close modal if user clicks outside the modal content.
        window.addEventListener("click", function(event) {
          var modal = document.getElementById("voteHashModal");
          if (event.target === modal) {
            modal.style.display = "none";
          }
        });

        // Add search functionality: Filter the vote hashes as the user types.
        var searchInput = document.getElementById("voteHashSearch");
        searchInput.addEventListener("input", function() {
          var filter = this.value.toLowerCase();
          var hashItems = document.querySelectorAll("#voteHashList p");
          hashItems.forEach(function(item) {
            if (item.textContent.toLowerCase().includes(filter)) {
              item.style.display = "";
            } else {
              item.style.display = "none";
            }
          });
        });
      });
    </script>

    <footer class="footer">
      <div class="footer-left">
        <img src="img/calendar.png" class="footer-img" />
        <p id="datetime" data-date="<%= electionConfig.fakeCurrentDate %>"></p>
      </div>

      <div class="footer-center">
        <img src="img/copyright.png" class="footer-img" id="copyright-img" />
        <p>2025 - Fourmula 1</p>
      </div>

      <div class="footer-right">
        <img src="img/info.png" class="footer-img" id="info-img" />
        <p>Need help? Click&nbsp;</p>
        <a href="help_page">here.</a>
      </div>
    </footer>

    <script>
      function formatDate(isoString) {
        const date = new Date(isoString);
        const options = {
          month: "long",
          day: "2-digit",
          year: "numeric",
          hour: "2-digit",
          minute: "2-digit",
          hour12: true,
        };
        return date.toLocaleString("en-US", options).replace(",", " -").toUpperCase();
      }

      function updateDateTime() {
        const datetimeElement = document.getElementById("datetime");
        if (!datetimeElement) return;

        // Get the initial time from the data attribute
        let currentTime = new Date(datetimeElement.getAttribute("data-date"));

        function update() {
          datetimeElement.textContent = formatDate(currentTime);
          currentTime.setMinutes(currentTime.getMinutes() + 1); // Increment by 1 minute
        }

        update(); // Set initial formatted date
        setInterval(update, 60000); // Update every minute (60000ms)
      }

      document.addEventListener("DOMContentLoaded", updateDateTime);
    </script>
    <script src="js/index.js"></script>
  </body>
</html>
